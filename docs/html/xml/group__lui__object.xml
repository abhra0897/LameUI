<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__lui__object" kind="group">
    <compoundname>lui_object</compoundname>
    <title>All objects (widgets) API</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lui__object_1ga0d71d83d0757cfbafd9308689e41aaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_add_to_parent</definition>
        <argsstring>(lui_obj_t *obj, lui_obj_t *parent_obj)</argsstring>
        <name>lui_object_add_to_parent</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>parent_obj</declname>
        </param>
        <briefdescription>
<para>Add a child object to a parent object, thus grouping them together. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">//<sp/>Creating<sp/>a<sp/>scene<sp/>which<sp/>will<sp/>be<sp/>a<sp/>parent<sp/>object</highlight></codeline>
<codeline><highlight class="normal">lui_obj_t*<sp/>parent_scene<sp/>=<sp/>lui_scene_create();</highlight></codeline>
<codeline><highlight class="normal">lui_scene_set_active(parent_scene);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Creating<sp/>a<sp/>label<sp/>which<sp/>will<sp/>be<sp/>a<sp/>child<sp/>of<sp/>the<sp/>parent<sp/>scene</highlight></codeline>
<codeline><highlight class="normal">lui_obj_t*<sp/>child_label<sp/>=<sp/>lui_label_create();</highlight></codeline>
<codeline><highlight class="normal">lui_label_set_text(child_label,<sp/>&quot;I<sp/>am<sp/>child<sp/>of<sp/>a<sp/>scene&quot;);</highlight></codeline>
<codeline><highlight class="normal">lui_object_add_to_parent(child_label,<sp/>parent_scene);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Add<sp/>child<sp/>to<sp/>parent</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>child object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>parent object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="634" column="6" bodyfile="lame_ui.c" bodystart="2959" bodyend="2994" declfile="lame_ui.h" declline="634" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga0410a5dd9b906d11881611fc0dfdeea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_remove_from_parent</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_remove_from_parent</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Remove an object from its current parent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Child object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="641" column="6" bodyfile="lame_ui.c" bodystart="2996" bodyend="3024" declfile="lame_ui.h" declline="641" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gaed4bb7d9c2764c6786708535fad7cf67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_area</definition>
        <argsstring>(lui_obj_t *obj, uint16_t width, uint16_t height)</argsstring>
        <name>lui_object_set_area</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set drawing area of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="650" column="6" bodyfile="lame_ui.c" bodystart="3098" bodyend="3125" declfile="lame_ui.h" declline="650" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga7a2a43446875ea180d2a5f1103f0a547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_width</definition>
        <argsstring>(lui_obj_t *obj, uint16_t width)</argsstring>
        <name>lui_object_set_width</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set width of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="658" column="6" bodyfile="lame_ui.c" bodystart="3127" bodyend="3132" declfile="lame_ui.h" declline="658" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga0e9b5ea44b5698a9fac1d1a8440e378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_height</definition>
        <argsstring>(lui_obj_t *obj, uint16_t height)</argsstring>
        <name>lui_object_set_height</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set height of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="666" column="6" bodyfile="lame_ui.c" bodystart="3134" bodyend="3139" declfile="lame_ui.h" declline="666" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gaf7bedc873edb862f9c1f8b063f17f839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_position</definition>
        <argsstring>(lui_obj_t *obj, uint16_t x, uint16_t y)</argsstring>
        <name>lui_object_set_position</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set position of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="675" column="6" bodyfile="lame_ui.c" bodystart="3026" bodyend="3082" declfile="lame_ui.h" declline="675" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gac6ab60ef6a5e52ec9dd37dcb9cf117c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_x_pos</definition>
        <argsstring>(lui_obj_t *obj, uint16_t x)</argsstring>
        <name>lui_object_set_x_pos</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set only x position of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="683" column="6" bodyfile="lame_ui.c" bodystart="3084" bodyend="3089" declfile="lame_ui.h" declline="683" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga7cf13aeef87bd34c6e25e1bf410fe0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_y_pos</definition>
        <argsstring>(lui_obj_t *obj, uint16_t y)</argsstring>
        <name>lui_object_set_y_pos</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set only y position of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="691" column="6" bodyfile="lame_ui.c" bodystart="3091" bodyend="3096" declfile="lame_ui.h" declline="691" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga40a7f5963092cc887757eb4c72342caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_border_color</definition>
        <argsstring>(lui_obj_t *obj, uint16_t border_color)</argsstring>
        <name>lui_object_set_border_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>border_color</declname>
        </param>
        <briefdescription>
<para>Set border color of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border_color</parametername>
</parameternamelist>
<parameterdescription>
<para>border color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="699" column="6" bodyfile="lame_ui.c" bodystart="3141" bodyend="3149" declfile="lame_ui.h" declline="699" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gaa3e5b7c777ceee12a215eaa6bc45554b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_border_visibility</definition>
        <argsstring>(lui_obj_t *obj, uint8_t is_visible)</argsstring>
        <name>lui_object_set_border_visibility</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_visible</declname>
        </param>
        <briefdescription>
<para>Set border&apos;s visibility of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>1: visible; 0: invisible </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="707" column="6" bodyfile="lame_ui.c" bodystart="3151" bodyend="3159" declfile="lame_ui.h" declline="707" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga3c99e7b2155290f9b73b78ba87c3d34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_bg_color</definition>
        <argsstring>(lui_obj_t *obj, uint16_t color)</argsstring>
        <name>lui_object_set_bg_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set background color of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bg_color</parametername>
</parameternamelist>
<parameterdescription>
<para>background color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="715" column="6" bodyfile="lame_ui.c" bodystart="3161" bodyend="3169" declfile="lame_ui.h" declline="715" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gae9d2e2e1998f2603a3a6d24d08b5b64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_callback</definition>
        <argsstring>(lui_obj_t *obj, void(*obj_event_cb)(lui_obj_t *))</argsstring>
        <name>lui_object_set_callback</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *)</type>
          <declname>obj_event_cb</declname>
        </param>
        <briefdescription>
<para>Set event call back function for input handling. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when an event occurs against this object</para>
<para><bold>Example:</bold> <programlisting><codeline><highlight class="normal">lui_obj_t*<sp/>my_button;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>button_callback(lui_obj_t*<sp/>btn_obj)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Do<sp/>something</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">my_button<sp/>=<sp/>lui_button_create();</highlight></codeline>
<codeline><highlight class="normal">lui_object_set_callback(my_button,<sp/>button_callback);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_event_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>function pointer of the callback function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="736" column="6" bodyfile="lame_ui.c" bodystart="3171" bodyend="3176" declfile="lame_ui.h" declline="736" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gac20b18b75c1e5764e5cb00dc3bed6808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_object_get_state</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_get_state</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get the input state of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t state ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="744" column="8" bodyfile="lame_ui.c" bodystart="3178" bodyend="3183" declfile="lame_ui.h" declline="744" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga580b2bdece45808266791573d874aabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_object_get_event</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_get_event</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get input event of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t event ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="752" column="8" bodyfile="lame_ui.c" bodystart="3185" bodyend="3190" declfile="lame_ui.h" declline="752" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga15a349bf7d1abcbc475f009f7dd14dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_visibility</definition>
        <argsstring>(lui_obj_t *obj, uint8_t visible)</argsstring>
        <name>lui_object_set_visibility</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Set visibility of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>1: visible; 0: hidden </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>When object becomes visible, set needs_refresh bit for itself recursively. When object becomes invisble, set needs_refresh bit for its parent recursively.</para>
        </inbodydescription>
        <location file="lame_ui.h" line="760" column="6" bodyfile="lame_ui.c" bodystart="3192" bodyend="3227" declfile="lame_ui.h" declline="760" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gae97c5a363860c5fa7de4d40f167592a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_layer</definition>
        <argsstring>(lui_obj_t *obj, uint8_t layer_index)</argsstring>
        <name>lui_object_set_layer</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Set rendering layer index of an object. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects in higher layer will be rendered over the objects in lower layer. If 2 or more objects are in same layer, they&apos;re rendered based on the sequence they&apos;re added to parent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>layer index (0 - 128) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="772" column="6" bodyfile="lame_ui.c" bodystart="3248" bodyend="3298" declfile="lame_ui.h" declline="772" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga14ac387f2a2e89bdda2773f21e79d087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lui_object_get_layer</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_get_layer</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get rendering layer index of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int16_t layer index. Returns -1 if object is NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="780" column="9" bodyfile="lame_ui.c" bodystart="3300" bodyend="3306" declfile="lame_ui.h" declline="780" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga36344388e628fde997ebafaf75a43ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lui_object_set_enable_input</definition>
        <argsstring>(lui_obj_t *obj, uint8_t is_enabled)</argsstring>
        <name>lui_object_set_enable_input</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_enabled</declname>
        </param>
        <briefdescription>
<para>Enable or disble input handling of an object. If disabled, object won&apos;t cause input event callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>1: input enabled; 0: input disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t 1: success; 0: failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="790" column="9" bodyfile="lame_ui.c" bodystart="3229" bodyend="3246" declfile="lame_ui.h" declline="790" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga035918521a6c575108b64d7e960bb645" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* _lui_object_create</definition>
        <argsstring>(void)</argsstring>
        <name>_lui_object_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a generic object with default values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="800" column="11" bodyfile="lame_ui.c" bodystart="2934" bodyend="2957" declfile="lame_ui.h" declline="800" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga4c6477031513cc6b7b71aaf99e1ee06c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_object_set_need_refresh</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_object_set_need_refresh</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Set needs_refresh flag for an object. This flag determines if onject will be redrawn. </para>
        </briefdescription>
        <detaileddescription>
<para>When setting this flag for an object, flags of children and/or parent might also be set, depending on the requirement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="811" column="6" bodyfile="lame_ui.c" bodystart="3466" bodyend="3534" declfile="lame_ui.h" declline="811" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga4dacce477148500e23838ed091d2ca24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_object_render_parent_with_children</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_object_render_parent_with_children</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Render an object along with all its children (if any) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_parent</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="819" column="6" bodyfile="lame_ui.c" bodystart="3328" bodyend="3397" declfile="lame_ui.h" declline="819" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga3de65dadcfd95ac4fef0845da6e5392d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_object_render</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_object_render</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Render a single object (and NOT its children) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="827" column="6" bodyfile="lame_ui.c" bodystart="3399" bodyend="3464" declfile="lame_ui.h" declline="827" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga38b59b74ad804604873ede1015ed5663" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _lui_obj_layer_cmprtr</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>_lui_obj_layer_cmprtr</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Compares two objects&apos; layers and returns (layer1 - layer2) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object 2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int (layer1 - layer2) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="837" column="12" declfile="lame_ui.h" declline="837" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>These functions are applicable for all types of objects. Only for a few particular types of objects, one or more of these functions have no effect. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
