<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="font_maker_instr_page" kind="page">
    <compoundname>font_maker_instr_page</compoundname>
    <title>LameUI Font Maker</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ulink url="https://github.com/abhra0897/LameUI_font_maker">The <bold>LameUI_font_maker</bold> repository</ulink> is for creating fonts to use with LameUI GUI library. It consists of two tools:</para>
<para><orderedlist>
<listitem><para><bold>font2image:</bold> This is a GUI tool written in C++. This is a modified version of <ulink url="https://github.com/andryblack/fontbuilder">https://github.com/andryblack/fontbuilder</ulink>. font2image creates a <computeroutput>.png</computeroutput> image containing all the characters and a <computeroutput>.json</computeroutput> description file. These files are processed by <computeroutput>lameui_fontgen.py</computeroutput> in the next step.</para>
</listitem><listitem><para><bold>lameui_fontgen.py:</bold> This is a CLI tool written in Python. lameui_fontgen.py takes <computeroutput>.png</computeroutput> and <computeroutput>.json</computeroutput> files created by <computeroutput>font2image</computeroutput> as input and process them to create <computeroutput>.c</computeroutput>. and <computeroutput>.h</computeroutput> font files for LameUI.</para>
</listitem></orderedlist>
</para>
<sect1 id="font_maker_instr_page_1autotoc_md0">
<title>Requirements:</title>
<para><orderedlist>
<listitem><para>Qt5</para>
</listitem><listitem><para>Python3</para>
</listitem><listitem><para>Python PIL library</para>
</listitem><listitem><para>make, qmake</para>
</listitem><listitem><para>gcc</para>
</listitem></orderedlist>
</para>
</sect1>
<sect1 id="font_maker_instr_page_1autotoc_md1">
<title>Steps:</title>
<para>Following steps are used to create fonts for LameUI.</para>
<sect2 id="font_maker_instr_page_1autotoc_md2">
<title>Part 1: font2image</title>
<para>Use font2image to create <computeroutput>.png</computeroutput> and <computeroutput>.json</computeroutput> files from a <computeroutput>.ttf/.otf</computeroutput> font file. font2image has multiple tabs. Follow below instructions sequentially.</para>
<para>If font2image is not already compiled, compile and run using below commands. The output binary is created inside <bold>font_tools</bold>(./font_tools/) folder.</para>
<para><programlisting><codeline><highlight class="normal">qmake<sp/>-o<sp/>Makefile<sp/>font2image.pro</highlight></codeline>
<codeline><highlight class="normal">make<sp/>-j8</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>font_tools</highlight></codeline>
<codeline><highlight class="normal">./font2image</highlight></codeline>
</programlisting></para>
<para>After running font2image, follow these steps:</para>
<para>[<bold>Font Tab</bold>]</para>
<para><orderedlist>
<listitem><para>Select <computeroutput>Fonts directory</computeroutput> and choose <computeroutput>Font family</computeroutput>, <computeroutput>Size</computeroutput>, and <computeroutput>Style</computeroutput> of font.</para>
</listitem><listitem><para>Set <computeroutput>DPI</computeroutput> of font or keep it to default.</para>
</listitem><listitem><para>Set <computeroutput>Hinting</computeroutput> type from dropdown. Switch to <computeroutput>Font image preview</computeroutput> tab to the right pane to visualize how the font will look. Most of the time <computeroutput>Hinting: Disabled</computeroutput> gives suitable result.</para>
</listitem><listitem><para>Change sliders of <computeroutput>Faux bold</computeroutput> and <computeroutput>Faux italic</computeroutput> to make font bold or italic.</para>
</listitem><listitem><para>Keep <computeroutput>Width</computeroutput> and <computeroutput>Height</computeroutput> to 100%.</para>
</listitem></orderedlist>
</para>
<para>[<bold>Characters Tab</bold>]</para>
<para><orderedlist>
<listitem><para>Enter the characters that should be in the generated font. Keep it to default for most use cases.</para>
</listitem></orderedlist>
</para>
<para>[<bold>Layout Tab</bold>]</para>
<para><orderedlist>
<listitem><para>Select <computeroutput>Padding</computeroutput> offsets. This is the spacing between 2 characters. Recommended to keep it to default value (1).</para>
</listitem></orderedlist>
</para>
<para>[<bold>Output Tab</bold>]</para>
<para><orderedlist>
<listitem><para>Choose output directory. Recommended directory is <bold>lameui_fonts</bold>(./font_tools/lameui_fonts/). But it can be any directory too.</para>
</listitem><listitem><para>Set file name or keep it to default (recommended).</para>
</listitem><listitem><para>Click on <computeroutput>Write Font</computeroutput> button. Now this will generate a <computeroutput>.PNG</computeroutput> file and a <computeroutput>json</computeroutput> file in current directory.</para>
</listitem></orderedlist>
</para>
</sect2>
<sect2 id="font_maker_instr_page_1autotoc_md3">
<title>Part 2: lameui_fontgen.py</title>
<para>Use lameui_fontgen.py to convert those generated <computeroutput>.PNG</computeroutput> and <computeroutput>json</computeroutput> file pair to <computeroutput>.c</computeroutput> and <computeroutput>.h</computeroutput> file. It also adds png icons to the font. Icons are in <ulink url="./font_tools/icons/">icons</ulink> folder.</para>
<para>Read more about icons <ulink url="https://github.com/abhra0897/LameUI_font_maker/blob/master/font_tools/icons/README.md">here (1)</ulink>, <ulink url="https://github.com/abhra0897/LameUI_font_maker/blob/master/font_tools/icons/sys_icons/README.md">here (2)</ulink>, and <ulink url="https://github.com/abhra0897/LameUI_font_maker/blob/master/font_tools/icons/usr_icons/README.md">here (3)</ulink>.</para>
<para>Now follow these steps:</para>
<para><orderedlist>
<listitem><para>Run lameui_fontgen.py with: <linebreak/>
</para>
<para><computeroutput>python lameui_fontgen.py &lt;font_png_file&gt; &lt;font_json_file&gt; &lt;system_icons_folder&gt; &lt;user_icons_folder&gt; &lt;C_files_output_folder&gt;</computeroutput><itemizedlist>
<listitem><para><computeroutput>&lt;font_png_file&gt;</computeroutput>: .PNG file created by font2image</para>
</listitem><listitem><para><computeroutput>&lt;font_json_file&gt;</computeroutput>: .json file created by font2image</para>
</listitem><listitem><para><computeroutput>&lt;system_icons_folder&gt;</computeroutput>: folder where system icons are stored. Recommended: <bold>sys_icons</bold>(./font_tools/icons/sys_icons/).</para>
</listitem><listitem><para><computeroutput>&lt;user_icons_folder&gt;</computeroutput>: folder where user icons are stored. Recommended: <bold>usr_icons</bold>(./font_tools/icons/usr_icons/).</para>
</listitem><listitem><para><computeroutput>&lt;C_files_output_folder&gt;</computeroutput>: Folder where output <computeroutput>.c</computeroutput>. and <computeroutput>.h</computeroutput> files will be stored. Recommended: <bold>lameui_fonts</bold>(./font_tools/lameui_fonts/).</para>
</listitem></itemizedlist>
</para>
<para>Example command:</para>
<para><computeroutput>python lameui_fontgen.py ubuntu_bold_16.PNG ubuntu_bold_16.json icons/sys_icons/ icons/usr_icons/ lameui_fonts/</computeroutput></para>
</listitem><listitem><para>Use generated <computeroutput>.c</computeroutput>. and <computeroutput>.h</computeroutput> font files in LameUI project by including the header and compiling the c file. </para>
</listitem></orderedlist>
</para>
</sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
