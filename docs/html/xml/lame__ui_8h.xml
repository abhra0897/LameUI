<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="lame__ui_8h" kind="file" language="C++">
    <compoundname>lame_ui.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="akshar__light__32_8h" local="yes">fonts/akshar_light_32.h</includedby>
    <includedby refid="montserrat__regular__17_8h" local="yes">fonts/montserrat_regular_17.h</includedby>
    <includedby refid="montserrat__regular__32_8h" local="yes">fonts/montserrat_regular_32.h</includedby>
    <includedby refid="ubuntu__regular__17_8h" local="yes">fonts/ubuntu_regular_17.h</includedby>
    <includedby refid="lame__ui_8c" local="yes">lame_ui.c</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>lame_ui.h</label>
        <link refid="lame__ui_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>fonts/ubuntu_regular_17.h</label>
        <link refid="ubuntu__regular__17_8h_source"/>
      </node>
      <node id="3">
        <label>fonts/montserrat_regular_17.h</label>
        <link refid="montserrat__regular__17_8h_source"/>
      </node>
      <node id="6">
        <label>lame_ui.c</label>
        <link refid="lame__ui_8c"/>
      </node>
      <node id="1">
        <label>lame_ui.h</label>
        <link refid="lame__ui_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fonts/akshar_light_32.h</label>
        <link refid="akshar__light__32_8h_source"/>
      </node>
      <node id="4">
        <label>fonts/montserrat_regular_32.h</label>
        <link refid="montserrat__regular__32_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__lui__mem__block__t" prot="public">_lui_mem_block_t</innerclass>
    <innerclass refid="structlui__bitmap__t" prot="public">lui_bitmap_t</innerclass>
    <innerclass refid="struct__lui__glyph__t" prot="public">_lui_glyph_t</innerclass>
    <innerclass refid="structlui__font__t" prot="public">lui_font_t</innerclass>
    <innerclass refid="struct__lui__area__s" prot="public">_lui_area_s</innerclass>
    <innerclass refid="struct__lui__common__style__s" prot="public">_lui_common_style_s</innerclass>
    <innerclass refid="struct__lui__label__style__s" prot="public">_lui_label_style_s</innerclass>
    <innerclass refid="struct__lui__button__style__s" prot="public">_lui_button_style_s</innerclass>
    <innerclass refid="struct__lui__switch__style__s" prot="public">_lui_switch_style_s</innerclass>
    <innerclass refid="struct__lui__checkbox__style__s" prot="public">_lui_checkbox_style_s</innerclass>
    <innerclass refid="struct__lui__slider__style__s" prot="public">_lui_slider_style_s</innerclass>
    <innerclass refid="struct__lui__linechart__style__s" prot="public">_lui_linechart_style_s</innerclass>
    <innerclass refid="struct__lui__list__style__s" prot="public">_lui_list_style_s</innerclass>
    <innerclass refid="struct__lui__btngrid__style__s" prot="public">_lui_btngrid_style_s</innerclass>
    <innerclass refid="struct__lui__textbox__style__s" prot="public">_lui_textbox_style_s</innerclass>
    <innerclass refid="struct__lui__obj__s" prot="public">_lui_obj_s</innerclass>
    <innerclass refid="struct__lui__linechart__s" prot="public">_lui_linechart_s</innerclass>
    <innerclass refid="struct__lui__label__s" prot="public">_lui_label_s</innerclass>
    <innerclass refid="struct__lui__button__s" prot="public">_lui_button_s</innerclass>
    <innerclass refid="struct__lui__switch__s" prot="public">_lui_switch_s</innerclass>
    <innerclass refid="struct__lui__checkbox__s" prot="public">_lui_checkbox_s</innerclass>
    <innerclass refid="struct__lui__slider__s" prot="public">_lui_slider_s</innerclass>
    <innerclass refid="struct__lui__list__s" prot="public">_lui_list_s</innerclass>
    <innerclass refid="struct__lui__keyboard__s" prot="public">_lui_keyboard_s</innerclass>
    <innerclass refid="struct__lui__btngrid__s" prot="public">_lui_btngrid_s</innerclass>
    <innerclass refid="struct__lui__textbox__s" prot="public">_lui_textbox_s</innerclass>
    <innerclass refid="struct__lui__panel__s" prot="public">_lui_panel_s</innerclass>
    <innerclass refid="struct__lui__scene__s" prot="public">_lui_scene_s</innerclass>
    <innerclass refid="struct__lui__touch__input__data__s" prot="public">_lui_touch_input_data_s</innerclass>
    <innerclass refid="struct__lui__disp__drv__s" prot="public">_lui_disp_drv_s</innerclass>
    <innerclass refid="struct__lui__touch__input__dev__s" prot="public">_lui_touch_input_dev_s</innerclass>
    <innerclass refid="struct__lui__main__s" prot="public">_lui_main_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__LUI__USER__CONFIG_1gac614eedf6ba02a547abc55527a7f2982" prot="public" static="no">
        <name>LUI_MAX_OBJECTS</name>
        <initializer>130</initializer>
        <briefdescription>
<para>Set number of maximum objects that can be created. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="35" column="9" bodyfile="lame_ui.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USER__CONFIG_1gab6571f6979947007287617835dafc85c" prot="public" static="no">
        <name>LUI_USE_DARK_THEME</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Comment out OR set value to 0 for using light theme. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="37" column="9" bodyfile="lame_ui.h" bodystart="2434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1ga82c1ecd24694c1c50e9f804b510a5f68" prot="public" static="no">
        <name>LUI_USE_LINECHART</name>
        <briefdescription>
<para>Compile Linechart widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="51" column="9" bodyfile="lame_ui.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1ga090cd6d9140af68e21d5d1d466011b51" prot="public" static="no">
        <name>LUI_USE_SWITCH</name>
        <briefdescription>
<para>Compile Switch widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="52" column="9" bodyfile="lame_ui.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1ga06d5e9b628c01b45bc47c6af3f735ba5" prot="public" static="no">
        <name>LUI_USE_CHECKBOX</name>
        <briefdescription>
<para>Compile Checkbox widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="53" column="9" bodyfile="lame_ui.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1ga037a75e722772914ddedf12f38f1c431" prot="public" static="no">
        <name>LUI_USE_SLIDER</name>
        <briefdescription>
<para>Compile Slider widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="54" column="9" bodyfile="lame_ui.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1gab31bbf353b4a1abe8a3a8374e47098c7" prot="public" static="no">
        <name>LUI_USE_LIST</name>
        <briefdescription>
<para>Compile List widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="55" column="9" bodyfile="lame_ui.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1gae65a21daf3dd06d5a8cb7e1d89d01e3f" prot="public" static="no">
        <name>LUI_USE_PANEL</name>
        <briefdescription>
<para>Compile Panel widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="56" column="9" bodyfile="lame_ui.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1ga4b024b1b29ba110778de47b1d0e3f480" prot="public" static="no">
        <name>LUI_USE_TEXTBOX</name>
        <briefdescription>
<para>Compile Textbox widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="57" column="9" bodyfile="lame_ui.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1ga4cbf5b51287f460c68b268c5bd598871" prot="public" static="no">
        <name>LUI_USE_BUTTONGRID</name>
        <briefdescription>
<para>Compile Buttongrid widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="58" column="9" bodyfile="lame_ui.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USE__OBJECT_1gab8fdedff83ca539ac192a8943d38177e" prot="public" static="no">
        <name>LUI_USE_KEYBOARD</name>
        <briefdescription>
<para>Compile Keyboard widget. (Note: To use keyboard, buttongrid must be used) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="60" column="10" bodyfile="lame_ui.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a2c62749ac689d5d9ab791bbcef590495" prot="public" static="no">
        <name>LUI_INPUT_TYPE_TOUCH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="81" column="9" bodyfile="lame_ui.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__STATE_1gafa8144d7cc23391d25d08cfd6c24563f" prot="public" static="no">
        <name>LUI_STATE_IDLE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Idle state. Object is not under the pointing device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="91" column="9" bodyfile="lame_ui.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__STATE_1ga30afefa8e1c9dcbc7bff36f77448dd00" prot="public" static="no">
        <name>LUI_STATE_SELECTED</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Object is under the pointing device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="92" column="9" bodyfile="lame_ui.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__STATE_1ga4e9f31b3efcee1dd2b30b6c5e1c6bf2b" prot="public" static="no">
        <name>LUI_STATE_PRESSED</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Object is under the pointig device and the pointing device button is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="93" column="9" bodyfile="lame_ui.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__STATE_1gae7fad37f0ae5cb98ac8b76fd848ca985" prot="public" static="no">
        <name>LUI_STATE_ENTERED</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Object is in entered state. Example: Text box is clicked. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="94" column="9" bodyfile="lame_ui.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1ga1848d9f83eeb058010e309e253410dce" prot="public" static="no">
        <name>LUI_EVENT_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>No event occured. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="104" column="9" bodyfile="lame_ui.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1gac7d6c6bf48a50747e102d7de5729931d" prot="public" static="no">
        <name>LUI_EVENT_SELECTED</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Object is selected (under the pointing device) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="105" column="9" bodyfile="lame_ui.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1gae233d0007818b1c119d1c8cd44e04f63" prot="public" static="no">
        <name>LUI_EVENT_SELECTION_LOST</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Selection of object is lost (no more under the pointing device) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="106" column="9" bodyfile="lame_ui.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1gac1d4660029fe5efac27e0116e258d65d" prot="public" static="no">
        <name>LUI_EVENT_PRESSED</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Object is pressed (object under pointing device and pointing device button is low) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="107" column="9" bodyfile="lame_ui.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1ga7bb839ee9510a334e4ebc1af25613d25" prot="public" static="no">
        <name>LUI_EVENT_RELEASED</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Object is released (object under pointing device but pointing device button is released) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="108" column="9" bodyfile="lame_ui.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1gac3c329747d83a31d3e2bdaa4f59c7106" prot="public" static="no">
        <name>LUI_EVENT_ENTERED</name>
        <initializer>5</initializer>
        <briefdescription>
<para>Object is entered to input mode. Example: Clicking on a text box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="109" column="9" bodyfile="lame_ui.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1gadc65dc42494a76b2ec7da54ee0571c3f" prot="public" static="no">
        <name>LUI_EVENT_EXITED</name>
        <initializer>6</initializer>
        <briefdescription>
<para>Opposite of above. Example: Clicking outside of a text box. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="110" column="9" bodyfile="lame_ui.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1gaac0f29869773a73ada40aa4b8bba419e" prot="public" static="no">
        <name>LUI_EVENT_VALUE_CHANGED</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Value of a object is changed. Example: a slider is dragged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="111" column="9" bodyfile="lame_ui.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__EVENT_1ga992d862ff4bb6f046eaba1f9b026bb61" prot="public" static="no">
        <name>LUI_EVENT_CHECK_CHANGED</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Check status of an object is changed. Example: checkbox is checked/unchecked. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="112" column="9" bodyfile="lame_ui.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga0f0485902b6bef68f14ff1be14981601" prot="public" static="no">
        <name>LUI_OBJ_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>No type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="120" column="9" bodyfile="lame_ui.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1gabf090b42db96c0047ecc237c29b40b2a" prot="public" static="no">
        <name>LUI_OBJ_LABEL</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Label widget. See: <ref refid="group__lui__label" kindref="compound">Label API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="121" column="9" bodyfile="lame_ui.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga71ca4e187e8cdb3523ecaa04cc8e839a" prot="public" static="no">
        <name>LUI_OBJ_BUTTON</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Button widget. See: <ref refid="group__lui__button" kindref="compound">Button API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="122" column="9" bodyfile="lame_ui.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga8e7d5766387add17777da01798587b00" prot="public" static="no">
        <name>LUI_OBJ_SWITCH</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Switch widget. See: <ref refid="group__lui__switch" kindref="compound">Switch API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="123" column="9" bodyfile="lame_ui.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga9c3c2877dc4affdd235ad8fe08bc2dda" prot="public" static="no">
        <name>LUI_OBJ_LINECHART</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Line Chart widget. See: <ref refid="group__lui__linechart" kindref="compound">Linechart API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="124" column="9" bodyfile="lame_ui.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga98cfeaf48cb8a5e56abb21711ce897f1" prot="public" static="no">
        <name>LUI_OBJ_PANEL</name>
        <initializer>5</initializer>
        <briefdescription>
<para>Panel widget. See: <ref refid="group__lui__panel" kindref="compound">Panel API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="125" column="9" bodyfile="lame_ui.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga913f973f4218c30495747ec49ffc62b8" prot="public" static="no">
        <name>LUI_OBJ_SCENE</name>
        <initializer>6</initializer>
        <briefdescription>
<para>Scene widget. See: <ref refid="group__lui__scene" kindref="compound">Scene API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="126" column="9" bodyfile="lame_ui.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga8639b63999e5213c9577763000ff46a6" prot="public" static="no">
        <name>LUI_OBJ_GENERIC</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Generic widget (user defined widget) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="127" column="9" bodyfile="lame_ui.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga1d04fb7b87c8368cf88bb79fdec83385" prot="public" static="no">
        <name>LUI_OBJ_LIST</name>
        <initializer>8</initializer>
        <briefdescription>
<para>List widget. See: <ref refid="group__lui__list" kindref="compound">List API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="128" column="9" bodyfile="lame_ui.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga33316a24dae697bdf359501cf0a8adeb" prot="public" static="no">
        <name>LUI_OBJ_CHECKBOX</name>
        <initializer>9</initializer>
        <briefdescription>
<para>Checknox widget. See: <ref refid="group__lui__checkbox" kindref="compound">Checkbox API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="129" column="9" bodyfile="lame_ui.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1gaba6bbd7622f9a952033593c2ca45a379" prot="public" static="no">
        <name>LUI_OBJ_SLIDER</name>
        <initializer>10</initializer>
        <briefdescription>
<para>Slider widget. See: <ref refid="group__lui__slider" kindref="compound">Slider API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="130" column="9" bodyfile="lame_ui.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1ga4d227ff4ed4479e309b6b9ad3fad7334" prot="public" static="no">
        <name>LUI_OBJ_BTNGRID</name>
        <initializer>11</initializer>
        <briefdescription>
<para>Buttongrid widget. See: <ref refid="group__lui__btngrid" kindref="compound">Buttongrid API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="131" column="9" bodyfile="lame_ui.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__OBJ_1gada57323fd9df5ab45a4a66db12d55766" prot="public" static="no">
        <name>LUI_OBJ_TEXTBOX</name>
        <initializer>12</initializer>
        <briefdescription>
<para>Textbox widget. See: <ref refid="group__lui__textbox" kindref="compound">Textbox API</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="132" column="9" bodyfile="lame_ui.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ac9926a9d6eb8e7924363769c7e3a0d11" prot="public" static="no">
        <name>LUI_LAYER_POPUP</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="135" column="9" bodyfile="lame_ui.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__KEYBOARD__MODE_1ga53cf1a061af12c998702ac1dc8c6ffca" prot="public" static="no">
        <name>LUI_KEYBOARD_MODE_TXT_LOWER</name>
        <initializer>1</initializer>
        <briefdescription>
<para>lowercase text mode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="142" column="9" bodyfile="lame_ui.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__KEYBOARD__MODE_1ga6c7dfef998e05b11ae2bcfdb5af32f27" prot="public" static="no">
        <name>LUI_KEYBOARD_MODE_TXT_UPPER</name>
        <initializer>2</initializer>
        <briefdescription>
<para>UPPERCASE TEXT MODE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="143" column="9" bodyfile="lame_ui.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__KEYBOARD__MODE_1gaf40e758476c4dacde5c9c79dd265e7eb" prot="public" static="no">
        <name>LUI_KEYBOARD_MODE_TXT_SPCL</name>
        <initializer>3</initializer>
        <briefdescription>
<para>$pec!a1 charac+er m0d3; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="144" column="9" bodyfile="lame_ui.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gad1154c55619e443178bd812aadbb710d" prot="public" static="no">
        <name>LUI_ICON_HOME</name>
        <initializer>&quot;\x01&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="161" column="9" bodyfile="lame_ui.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gaf3af51845f962c906d6e9198dccb8316" prot="public" static="no">
        <name>LUI_ICON_RELAOD</name>
        <initializer>&quot;\x02&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="162" column="9" bodyfile="lame_ui.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gae5cc5454ed2c8a203a4acb0acdf1afbe" prot="public" static="no">
        <name>LUI_ICON_BATTERY_HALF</name>
        <initializer>&quot;\x03&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="163" column="9" bodyfile="lame_ui.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga7fbfb716d376dd490ec613ac8f458265" prot="public" static="no">
        <name>LUI_ICON_LOCATION</name>
        <initializer>&quot;\x04&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="164" column="9" bodyfile="lame_ui.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga366c73f2453cd2811bf107b3c90b9c3c" prot="public" static="no">
        <name>LUI_ICON_BATTERY_FULL</name>
        <initializer>&quot;\x05&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="165" column="9" bodyfile="lame_ui.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga3d49ba105be02944754a9e6a37e07754" prot="public" static="no">
        <name>LUI_ICON_CHECKMARK</name>
        <initializer>&quot;\x06&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="166" column="9" bodyfile="lame_ui.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gad84b20873d1414322c122a4bad607c42" prot="public" static="no">
        <name>LUI_ICON_RETURN_DOWN_BACK</name>
        <initializer>&quot;\x07&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="167" column="9" bodyfile="lame_ui.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga787292ab7050b9bfe7b421891d5f6b1d" prot="public" static="no">
        <name>LUI_ICON_ARROW_DOWN</name>
        <initializer>&quot;\x08&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="168" column="9" bodyfile="lame_ui.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gaffa6e324abe93168acc1467601f8fc64" prot="public" static="no">
        <name>LUI_ICON_BACKSPACE</name>
        <initializer>&quot;\x09&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="169" column="9" bodyfile="lame_ui.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga2a417336966b775dbf440df829cf76e1" prot="public" static="no">
        <name>LUI_ICON_PAUSE</name>
        <initializer>&quot;\x0A&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="170" column="9" bodyfile="lame_ui.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga9c3bb90a40f93aa9c614ac40452210b6" prot="public" static="no">
        <name>LUI_ICON_REMOVE</name>
        <initializer>&quot;\x0B&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="171" column="9" bodyfile="lame_ui.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga284f7329f4ad53e3c31fff239ce3d7a4" prot="public" static="no">
        <name>LUI_ICON_POWER</name>
        <initializer>&quot;\x0C&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="172" column="9" bodyfile="lame_ui.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga344943ad5300f12781e96c0b8b57a74a" prot="public" static="no">
        <name>LUI_ICON_HOURGLASS</name>
        <initializer>&quot;\x0D&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="173" column="9" bodyfile="lame_ui.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gaf9b200823fc0985c9597309b2afdccfc" prot="public" static="no">
        <name>LUI_ICON_VOLUME_MEDIUM</name>
        <initializer>&quot;\x0E&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="174" column="9" bodyfile="lame_ui.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga1f6049d672de02084a8a12b0fe70603c" prot="public" static="no">
        <name>LUI_ICON_ARROW_BACK</name>
        <initializer>&quot;\x0F&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="175" column="9" bodyfile="lame_ui.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga8fdfe4c0efcdec918f4ca1324c375f3e" prot="public" static="no">
        <name>LUI_ICON_CLOSE</name>
        <initializer>&quot;\x10&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="176" column="9" bodyfile="lame_ui.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga27f0d7d4f8c4aad23fda627922223d92" prot="public" static="no">
        <name>LUI_ICON_BLUETOOTH</name>
        <initializer>&quot;\x11&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="177" column="9" bodyfile="lame_ui.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga691d6e13b473af16e8541dea6d851b87" prot="public" static="no">
        <name>LUI_ICON_PLAY</name>
        <initializer>&quot;\x12&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="178" column="9" bodyfile="lame_ui.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga82b14467d3547a28e77d29ade0603f38" prot="public" static="no">
        <name>LUI_ICON_VOLUME_OFF</name>
        <initializer>&quot;\x13&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="179" column="9" bodyfile="lame_ui.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga8292e4c32772949773d014e3792baf2a" prot="public" static="no">
        <name>LUI_ICON_ARROW_FORWARD</name>
        <initializer>&quot;\x14&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="180" column="9" bodyfile="lame_ui.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gae279007a1236ca9beeff95d856fa121f" prot="public" static="no">
        <name>LUI_ICON_BATTERY_CHARGING</name>
        <initializer>&quot;\x15&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="181" column="9" bodyfile="lame_ui.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gafbec9aa67a1b277da3eee583ff22573c" prot="public" static="no">
        <name>LUI_ICON_ARROW_UP</name>
        <initializer>&quot;\x16&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="182" column="9" bodyfile="lame_ui.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga16405e936869e4c459420522aeb8fa8b" prot="public" static="no">
        <name>LUI_ICON_WIFI</name>
        <initializer>&quot;\x17&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="183" column="9" bodyfile="lame_ui.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gabe0ba98e28016e2ba8c3056c1322fbb7" prot="public" static="no">
        <name>LUI_ICON_SEARCH</name>
        <initializer>&quot;\x18&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="184" column="9" bodyfile="lame_ui.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga6c340335c00ad196d330a289194c24ed" prot="public" static="no">
        <name>LUI_ICON_WARNING</name>
        <initializer>&quot;\x19&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="185" column="9" bodyfile="lame_ui.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga6ca91e779dcc12ec8c31048715d1be2e" prot="public" static="no">
        <name>LUI_ICON_SETTINGS</name>
        <initializer>&quot;\x1A&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="186" column="9" bodyfile="lame_ui.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gafdfcb3eccaa9716823a094a69e4fb176" prot="public" static="no">
        <name>LUI_ICON_ADD</name>
        <initializer>&quot;\x1B&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="187" column="9" bodyfile="lame_ui.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1ga1b88b461268679d9f7def0f62f63a6c0" prot="public" static="no">
        <name>LUI_ICON_BATTERY_DEAED</name>
        <initializer>&quot;\x1C&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="188" column="9" bodyfile="lame_ui.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__ICONS_1gab0451ba9edcdb3c1686a5879690e25b6" prot="public" static="no">
        <name>LUI_ICON_STOP</name>
        <initializer>&quot;\x1D&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="189" column="9" bodyfile="lame_ui.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__BTNGRID__MASKS_1ga265e4dc05e3da27de273897cd2e982ea" prot="public" static="no">
        <name>LUI_BTNGRID_MASK_BTN_DISABLED</name>
        <initializer>0x40</initializer>
        <briefdescription>
<para>Button disabled mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="198" column="9" bodyfile="lame_ui.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__BTNGRID__MASKS_1gaa89b220d3a160df88c7a9c9b5a45d673" prot="public" static="no">
        <name>LUI_BTNGRID_MASK_BTN_HIDDEN</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>Button hidden mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="199" column="9" bodyfile="lame_ui.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__BTNGRID__MASKS_1ga4602d581d707dea1c8b3da39a573e3ee" prot="public" static="no">
        <name>LUI_BTNGRID_MASK_BTN_CHECKABLE</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>Button checkable mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="200" column="9" bodyfile="lame_ui.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__BTNGRID__MASKS_1ga2112955982994d548d7789d152d2552d" prot="public" static="no">
        <name>LUI_BTNGRID_MASK_BTN_CHECKED</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>Button checked mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="201" column="9" bodyfile="lame_ui.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__BTNGRID__MASKS_1gac8eb53fd6ef2b0911ca5b25c6b65bd30" prot="public" static="no">
        <name>LUI_BTNGRID_MASK_BTN_WIDTH_UNIT</name>
        <initializer>0x0F</initializer>
        <briefdescription>
<para>Button width mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="202" column="9" bodyfile="lame_ui.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a85afc47355fb034b0db91b6aeffe4765" prot="public" static="no">
        <name>_LUI_R_POS_RGB</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2420" column="9" bodyfile="lame_ui.h" bodystart="2420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1afd84631255c5adff703db28b0d8ae408" prot="public" static="no">
        <name>_LUI_G_POS_RGB</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2421" column="9" bodyfile="lame_ui.h" bodystart="2421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a9448a03bb7a57cf6c45d820b6b9b947f" prot="public" static="no">
        <name>_LUI_B_POS_RGB</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2422" column="9" bodyfile="lame_ui.h" bodystart="2422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a99936dc55505afbd906e60699d700ff5" prot="public" static="no">
        <name>LUI_RGB</name>
        <param><defname>R</defname></param>
        <param><defname>G</defname></param>
        <param><defname>B</defname></param>
        <initializer>											(((uint16_t)(R &gt;&gt; 3) &lt;&lt; _LUI_R_POS_RGB) | \
											((uint16_t)(G &gt;&gt; 2) &lt;&lt; _LUI_G_POS_RGB) | \
											((uint16_t)(B &gt;&gt; 3) &lt;&lt; _LUI_B_POS_RGB))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2424" column="9" bodyfile="lame_ui.h" bodystart="2424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__LUI__USER__CONFIG_1gab6571f6979947007287617835dafc85c" prot="public" static="no">
        <name>LUI_USE_DARK_THEME</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Comment out OR set value to 0 for using light theme. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2434" column="9" bodyfile="lame_ui.h" bodystart="2434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a7115562735030915c81eef2e05a1d16d" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_LABEL_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2438" column="10" bodyfile="lame_ui.h" bodystart="2438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ac7696d9c1626facd14d17396ace67f94" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_PRESSED_COLOR</name>
        <initializer>LUI_RGB(91, 160, 235)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2439" column="10" bodyfile="lame_ui.h" bodystart="2439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1acf758f5ea8e00876ed8026ad58dfb0b0" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_SELECTION_COLOR</name>
        <initializer>LUI_RGB(82, 143, 209)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2440" column="10" bodyfile="lame_ui.h" bodystart="2440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a1903524dcdd731d61ed52048935460cc" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_BG_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2441" column="10" bodyfile="lame_ui.h" bodystart="2441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aa68868a9a969e667b65d19ec865be6eb" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_BORDER_COLOR</name>
        <initializer>LUI_RGB(75, 81, 92)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2442" column="10" bodyfile="lame_ui.h" bodystart="2442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a3772df1e8291c43d2f76e75d87bd942e" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_BORDER_VISIBLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2450" column="10" bodyfile="lame_ui.h" bodystart="2450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a33f691f156ea81083f4a883f5e31c7ae" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_WIDTH</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2451" column="9" bodyfile="lame_ui.h" bodystart="2451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a27fc9b27f077bb119576ebdec312d8d2" prot="public" static="no">
        <name>LUI_STYLE_BUTTON_HEIGHT</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2452" column="9" bodyfile="lame_ui.h" bodystart="2452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aa769503475be521dbee6c06a3796690c" prot="public" static="no">
        <name>LUI_STYLE_LABEL_TEXT_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2455" column="10" bodyfile="lame_ui.h" bodystart="2458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a6402584277cf062e62f304ea5afccc23" prot="public" static="no">
        <name>LUI_STYLE_LABEL_BG_COLOR</name>
        <initializer>LUI_RGB(23, 33, 43)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2456" column="10" bodyfile="lame_ui.h" bodystart="2456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1af4cf237eb6a1b03065f586e4e2429ea1" prot="public" static="no">
        <name>LUI_STYLE_LABEL_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2457" column="10" bodyfile="lame_ui.h" bodystart="2457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aa769503475be521dbee6c06a3796690c" prot="public" static="no">
        <name>LUI_STYLE_LABEL_TEXT_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2458" column="10" bodyfile="lame_ui.h" bodystart="2458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a630fc26e9011c85e3c7675302af02eb6" prot="public" static="no">
        <name>LUI_STYLE_LABEL_BORDER_VISIBLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2464" column="10" bodyfile="lame_ui.h" bodystart="2464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a62a396e2f64b0980d91de8aa6393cc0d" prot="public" static="no">
        <name>LUI_STYLE_LABEL_WIDTH</name>
        <initializer>0 /*40*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2465" column="9" bodyfile="lame_ui.h" bodystart="2465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a0a58a540e5664eedd4c29ab49a4ce31f" prot="public" static="no">
        <name>LUI_STYLE_LABEL_HEIGHT</name>
        <initializer>0 /*30*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2466" column="9" bodyfile="lame_ui.h" bodystart="2466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aefce8fb18488f9c1ba8963586f9bc55e" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_SELECTION_COLOR</name>
        <initializer>LUI_RGB(0, 170, 179)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2469" column="10" bodyfile="lame_ui.h" bodystart="2469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a344aab011e2e2055e43c589b5eece3ec" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_KNOB_OFF_COLOR</name>
        <initializer>LUI_RGB(57, 62, 70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2470" column="10" bodyfile="lame_ui.h" bodystart="2470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a035ce4567892d90863494fa5aa490134" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_KNOB_ON_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2471" column="10" bodyfile="lame_ui.h" bodystart="2471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a167d83540426acf89669235553d29b41" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_BG_COLOR</name>
        <initializer>LUI_RGB(23, 33, 43)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2472" column="10" bodyfile="lame_ui.h" bodystart="2472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a1ef57a4f78dcdcb61375413d9e25995e" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2473" column="10" bodyfile="lame_ui.h" bodystart="2473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aec9817e68000dc8b9dedcb439d205145" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_BORDER_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2481" column="10" bodyfile="lame_ui.h" bodystart="2481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ae13fea715ddd1bda242832f12d175f21" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_WIDTH</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2482" column="9" bodyfile="lame_ui.h" bodystart="2482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a58495f0f2b8f61338cc36e5c910d947c" prot="public" static="no">
        <name>LUI_STYLE_SWITCH_HEIGHT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2483" column="9" bodyfile="lame_ui.h" bodystart="2483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a7ae31a92f0422554dda0f47eae5909e5" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_SELECTION_COLOR</name>
        <initializer>LUI_RGB(82, 143, 209)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2486" column="10" bodyfile="lame_ui.h" bodystart="2486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a1f7e3f7255f8d21e0eaab46b54a59240" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_TICK_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2487" column="10" bodyfile="lame_ui.h" bodystart="2487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a82f1343accb8222e5f35b605072d0dc1" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_BG_COLOR</name>
        <initializer>LUI_RGB(23, 33, 43)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2488" column="10" bodyfile="lame_ui.h" bodystart="2488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a7e1258c06e4c58d0329d12e170cdc390" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_BG_CHECKED_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2489" column="10" bodyfile="lame_ui.h" bodystart="2489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a97b11131a91d3a2864d4993ae5ea5bb8" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2490" column="10" bodyfile="lame_ui.h" bodystart="2490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a09b36635354812fce6d65007eb1e9337" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_BORDER_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2498" column="10" bodyfile="lame_ui.h" bodystart="2498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a415597a44b2f19a4b116d5f64411abc9" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_WIDTH</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2499" column="9" bodyfile="lame_ui.h" bodystart="2499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a0b65a1de66dccc55eae3c4dc0bec06b7" prot="public" static="no">
        <name>LUI_STYLE_CHECKBOX_HEIGHT</name>
        <initializer>LUI_STYLE_CHECKBOX_WIDTH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2500" column="9" bodyfile="lame_ui.h" bodystart="2500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aec27f7cd8085c7238fc69607520b513e" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_SELECTION_COLOR</name>
        <initializer>LUI_RGB(0, 170, 179)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2503" column="10" bodyfile="lame_ui.h" bodystart="2503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a87c514232199163dfbd3bd3c6f945f1a" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_KNOB_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2504" column="10" bodyfile="lame_ui.h" bodystart="2504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1af8ceddb5898328c6a03520e45b8ca5f4" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_BG_COLOR</name>
        <initializer>LUI_RGB(57, 62, 70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2505" column="10" bodyfile="lame_ui.h" bodystart="2505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a6a281167d56a2abfcd22cb672506d8e6" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_BG_FILLED_COLOR</name>
        <initializer>LUI_RGB(45, 77, 112) /*54, 94, 138*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2506" column="10" bodyfile="lame_ui.h" bodystart="2506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1afa6ab7e129999f973d229ae930731808" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2507" column="10" bodyfile="lame_ui.h" bodystart="2507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a5cb0ac725cd1208618639ef08eefc1c0" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_BORDER_VISIBLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2515" column="10" bodyfile="lame_ui.h" bodystart="2515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a2a8d838761347e8d250378b6b7888915" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_KNOB_WIDTH</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2516" column="9" bodyfile="lame_ui.h" bodystart="2516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1acbe47fcfacc6e9048c5a57314e751274" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_WIDTH</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2517" column="9" bodyfile="lame_ui.h" bodystart="2517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a73e50e096c1032f3c379364f0c8e37c0" prot="public" static="no">
        <name>LUI_STYLE_SLIDER_HEIGHT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2518" column="9" bodyfile="lame_ui.h" bodystart="2518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a996b618478223366e2f060e6f8a58805" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_LINE_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2521" column="10" bodyfile="lame_ui.h" bodystart="2521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ad58701ed26f72e6b578367b1a64def25" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_GRID_COLOR</name>
        <initializer>LUI_RGB(75, 81, 92)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2522" column="10" bodyfile="lame_ui.h" bodystart="2522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1af24e4f8b8db52e5ff2dda626cf38707e" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_BG_COLOR</name>
        <initializer>LUI_RGB(35, 46, 60)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2523" column="10" bodyfile="lame_ui.h" bodystart="2523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a412a959649a227718f76dbf40106269e" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2524" column="10" bodyfile="lame_ui.h" bodystart="2524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ac3d7daab457f3bc5727641816cae0078" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_GRID_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2531" column="10" bodyfile="lame_ui.h" bodystart="2531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a7fbe0a710a423ea6c482265b71ee6ffe" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_BORDER_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2532" column="9" bodyfile="lame_ui.h" bodystart="2532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1abd2dd19087ac3b851218454aedf0d42c" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_WIDTH</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2533" column="9" bodyfile="lame_ui.h" bodystart="2533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ae7f67095c85f60bc945f9c55ad2e961a" prot="public" static="no">
        <name>LUI_STYLE_LINECHART_HEIGHT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2534" column="9" bodyfile="lame_ui.h" bodystart="2534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a4ee172a2c84198a62f9c53c584193e28" prot="public" static="no">
        <name>LUI_STYLE_LIST_NAV_BG_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2537" column="10" bodyfile="lame_ui.h" bodystart="2537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ac2c825dea93c60e0592065a975ebfcbe" prot="public" static="no">
        <name>LUI_STYLE_LIST_NAV_LABEL_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2538" column="10" bodyfile="lame_ui.h" bodystart="2538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1aa70dea82d96de6e2ece82eadf3c8a101" prot="public" static="no">
        <name>LUI_STYLE_LIST_NAV_PRESSED_COLOR</name>
        <initializer>LUI_RGB(91, 160, 235)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2539" column="10" bodyfile="lame_ui.h" bodystart="2539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a42420155ea5f086561ef69d1ac044665" prot="public" static="no">
        <name>LUI_STYLE_LIST_NAV_SELECTION_COLOR</name>
        <initializer>LUI_RGB(82, 143, 209)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2540" column="10" bodyfile="lame_ui.h" bodystart="2540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a6062bd7b399bf4d2f89659689a948a3c" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_BG_COLOR</name>
        <initializer>LUI_RGB(57, 62, 70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2541" column="10" bodyfile="lame_ui.h" bodystart="2541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1af78d597b508229af9691fc176d2e0812" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_SELECTION_COLOR</name>
        <initializer>LUI_RGB(84, 91, 102)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2542" column="10" bodyfile="lame_ui.h" bodystart="2542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a480b17f9dbb571f20e4ed9e4c2a5f76e" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_PRESSED_COLOR</name>
        <initializer>LUI_RGB(109, 118, 133)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2543" column="10" bodyfile="lame_ui.h" bodystart="2543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a5fd329c655af10691e100ed9954c94de" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_LABEL_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2544" column="10" bodyfile="lame_ui.h" bodystart="2544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a4b7e8ed59d8c90c5b614a98c3b9b4e29" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_BORDER_COLOR</name>
        <initializer>LUI_RGB(75, 81, 92)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2545" column="10" bodyfile="lame_ui.h" bodystart="2545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a1f1f0d191573cfd0d2fbb3acdc956d9b" prot="public" static="no">
        <name>LUI_STYLE_LIST_BORDER_VISIBLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2546" column="10" bodyfile="lame_ui.h" bodystart="2546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a25177998101ee6fbb5f8564ad3df3d9c" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_BORDER_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2559" column="10" bodyfile="lame_ui.h" bodystart="2559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a16456f4c76181d4bab9918c1400a68b6" prot="public" static="no">
        <name>LUI_STYLE_LIST_ITEM_MIN_HEIGHT</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2560" column="9" bodyfile="lame_ui.h" bodystart="2560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ad897b4eca88bc8c46f5dae24f692b687" prot="public" static="no">
        <name>LUI_STYLE_LIST_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2561" column="9" bodyfile="lame_ui.h" bodystart="2561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a9fb982759b412ab5238137ae17cec1ca" prot="public" static="no">
        <name>LUI_STYLE_LIST_WIDTH</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2562" column="9" bodyfile="lame_ui.h" bodystart="2562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a3b90bc857455582210b60ca66836fe44" prot="public" static="no">
        <name>LUI_STYLE_LIST_HEIGHT</name>
        <initializer>60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2563" column="9" bodyfile="lame_ui.h" bodystart="2563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a1d42f3cd51d5ed8c0bcac239e7e5fcf4" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_BASE_BG_COLOR</name>
        <initializer>LUI_RGB(23, 33, 43)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2566" column="10" bodyfile="lame_ui.h" bodystart="2566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ae1b410c3301e49378ac64f8c01b1a8b1" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_LABEL_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2567" column="10" bodyfile="lame_ui.h" bodystart="2567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a9068ddceba39ec3adcf65f0965b53229" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_PRESSED_COLOR</name>
        <initializer>LUI_RGB(91, 160, 235)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2568" column="10" bodyfile="lame_ui.h" bodystart="2568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ac012d7d8181fd95e56c0aa6fac684bab" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_BG_COLOR</name>
        <initializer>LUI_RGB(39, 55, 71)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2569" column="10" bodyfile="lame_ui.h" bodystart="2569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ae6ac7a6fe7d1a3dd33b3b4c495c406e3" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_SELECTION_COLOR</name>
        <initializer>LUI_RGB(82, 143, 209)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2570" column="10" bodyfile="lame_ui.h" bodystart="2570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a5e8e2aa793d354ebbb6b3158809835fd" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_BORDER_COLOR</name>
        <initializer>LUI_RGB(75, 81, 92)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2571" column="10" bodyfile="lame_ui.h" bodystart="2571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1ab9c90ade9745554fe014dc74bee8f2ba" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_BORDER_VISIBLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2572" column="10" bodyfile="lame_ui.h" bodystart="2572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a0fe775d03dfc4c63d4436ebdd3076fb5" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_WIDTH</name>
        <initializer>300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2583" column="10" bodyfile="lame_ui.h" bodystart="2583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a096f908913a3359c306ec1f086f57524" prot="public" static="no">
        <name>LUI_STYLE_BTNGRID_HEIGHT</name>
        <initializer>180</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2584" column="9" bodyfile="lame_ui.h" bodystart="2584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1abb977952fda27fba899c8770d6bdf9d0" prot="public" static="no">
        <name>LUI_STYLE_TEXTBOX_TEXT_COLOR</name>
        <initializer>LUI_RGB(238, 238, 238)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2587" column="10" bodyfile="lame_ui.h" bodystart="2587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a1c61a32a332fa7a415d0638e51a81ed0" prot="public" static="no">
        <name>LUI_STYLE_TEXTBOX_BG_COLOR</name>
        <initializer>LUI_RGB(45, 56, 70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2588" column="10" bodyfile="lame_ui.h" bodystart="2588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a6dd8c0c8fe29685caf0364ccea513166" prot="public" static="no">
        <name>LUI_STYLE_TEXTBOX_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2589" column="10" bodyfile="lame_ui.h" bodystart="2589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a6c31f1e469d1e0c78bd37e51bf2a7734" prot="public" static="no">
        <name>LUI_STYLE_TEXTBOX_BORDER_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2595" column="10" bodyfile="lame_ui.h" bodystart="2595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a76dd5cbb46f3caa36a563cc223d34bcf" prot="public" static="no">
        <name>LUI_STYLE_TEXTBOX_WIDTH</name>
        <initializer>200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2596" column="9" bodyfile="lame_ui.h" bodystart="2596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a9d0d14baf52c88fe33cf562c636d9a24" prot="public" static="no">
        <name>LUI_STYLE_TEXTBOX_HEIGHT</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2597" column="9" bodyfile="lame_ui.h" bodystart="2597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a2b9f65847d35f0b9b90568204a96c5df" prot="public" static="no">
        <name>LUI_STYLE_PANEL_BG_COLOR</name>
        <initializer>LUI_RGB(23, 33, 43)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2600" column="10" bodyfile="lame_ui.h" bodystart="2600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a66cb257f025f781b5019456f2f14ec6e" prot="public" static="no">
        <name>LUI_STYLE_PANEL_BORDER_COLOR</name>
        <initializer>LUI_RGB(74, 129, 188)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2601" column="10" bodyfile="lame_ui.h" bodystart="2601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a07eedc787a8dd40d21869a9f73ba51b8" prot="public" static="no">
        <name>LUI_STYLE_PANEL_BORDER_VISIBLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2606" column="10" bodyfile="lame_ui.h" bodystart="2606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a7a37f59ab3a9bdd7e6372da387e0e1ae" prot="public" static="no">
        <name>LUI_STYLE_PANEL_WIDTH</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2607" column="9" bodyfile="lame_ui.h" bodystart="2607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1adb6d0787879b5f8f0d8de181cd99ea20" prot="public" static="no">
        <name>LUI_STYLE_PANEL_HEIGHT</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2608" column="9" bodyfile="lame_ui.h" bodystart="2608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a6c4d18a9300b474bc09f340516169916" prot="public" static="no">
        <name>LUI_STYLE_SCENE_BG_COLOR</name>
        <initializer>LUI_RGB(23, 33, 43)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2611" column="10" bodyfile="lame_ui.h" bodystart="2611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lame__ui_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" prot="public" static="no">
        <name>NULL</name>
        <initializer>((void* )0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2622" column="10" bodyfile="lame_ui.h" bodystart="2622" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lame__ui_8h_1a89d2b851574a969160813b40a922de91" prot="public" static="no">
        <type>struct <ref refid="struct__lui__area__s" kindref="compound">_lui_area_s</ref></type>
        <definition>typedef struct _lui_area_s lui_area_t</definition>
        <argsstring></argsstring>
        <name>lui_area_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="257" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" prot="public" static="no">
        <type>struct <ref refid="struct__lui__obj__s" kindref="compound">_lui_obj_s</ref></type>
        <definition>typedef struct _lui_obj_s lui_obj_t</definition>
        <argsstring></argsstring>
        <name>lui_obj_t</name>
        <briefdescription>
<para>Generic object datatype. </para>
        </briefdescription>
        <detaileddescription>
<para>lui_obj_t contains all the common data of objects along with address of the extended data as per the type of the object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="371" column="10"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a7a3dae224909a5d4019c184cf02abac8" prot="public" static="no">
        <type>struct <ref refid="struct__lui__linechart__s" kindref="compound">_lui_linechart_s</ref></type>
        <definition>typedef struct _lui_linechart_s lui_chart_t</definition>
        <argsstring></argsstring>
        <name>lui_chart_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="397" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a3de288f88f36a1f93574e30278be5665" prot="public" static="no">
        <type>struct <ref refid="struct__lui__label__s" kindref="compound">_lui_label_s</ref></type>
        <definition>typedef struct _lui_label_s lui_label_t</definition>
        <argsstring></argsstring>
        <name>lui_label_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="406" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1abc80a7425cb56cd7bb428f19918a6a70" prot="public" static="no">
        <type>struct <ref refid="struct__lui__button__s" kindref="compound">_lui_button_s</ref></type>
        <definition>typedef struct _lui_button_s lui_button_t</definition>
        <argsstring></argsstring>
        <name>lui_button_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="417" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1ae41419d0713e90112acc1c5a378b87d9" prot="public" static="no">
        <type>struct <ref refid="struct__lui__switch__s" kindref="compound">_lui_switch_s</ref></type>
        <definition>typedef struct _lui_switch_s lui_switch_t</definition>
        <argsstring></argsstring>
        <name>lui_switch_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="424" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a5f33b693217dd79e4c665c5555f2384d" prot="public" static="no">
        <type>struct <ref refid="struct__lui__checkbox__s" kindref="compound">_lui_checkbox_s</ref></type>
        <definition>typedef struct _lui_checkbox_s lui_checkbox_t</definition>
        <argsstring></argsstring>
        <name>lui_checkbox_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="431" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a25daf727a1a426860d337169f453f6da" prot="public" static="no">
        <type>struct <ref refid="struct__lui__slider__s" kindref="compound">_lui_slider_s</ref></type>
        <definition>typedef struct _lui_slider_s lui_slider_t</definition>
        <argsstring></argsstring>
        <name>lui_slider_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="443" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a396f8c682ebe3a2aca082a8c000032d3" prot="public" static="no">
        <type>struct <ref refid="struct__lui__list__s" kindref="compound">_lui_list_s</ref></type>
        <definition>typedef struct _lui_list_s lui_list_t</definition>
        <argsstring></argsstring>
        <name>lui_list_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="457" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a69802ed2e5a14ba2b161710a5382b251" prot="public" static="no">
        <type>struct <ref refid="struct__lui__keyboard__s" kindref="compound">_lui_keyboard_s</ref></type>
        <definition>typedef struct _lui_keyboard_s lui_keyboard_t</definition>
        <argsstring></argsstring>
        <name>lui_keyboard_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="466" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a74196cfc99bc4a4ab92538207ff4c92c" prot="public" static="no">
        <type>struct <ref refid="struct__lui__btngrid__s" kindref="compound">_lui_btngrid_s</ref></type>
        <definition>typedef struct _lui_btngrid_s lui_btngrid_t</definition>
        <argsstring></argsstring>
        <name>lui_btngrid_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="484" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a81ac3ca528d5a17ab2e05c2dd883ed61" prot="public" static="no">
        <type>struct <ref refid="struct__lui__textbox__s" kindref="compound">_lui_textbox_s</ref></type>
        <definition>typedef struct _lui_textbox_s lui_textbox_t</definition>
        <argsstring></argsstring>
        <name>lui_textbox_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="498" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a3c713eda841ff6dfda135a327f797bbf" prot="public" static="no">
        <type>struct <ref refid="struct__lui__panel__s" kindref="compound">_lui_panel_s</ref></type>
        <definition>typedef struct _lui_panel_s lui_panel_t</definition>
        <argsstring></argsstring>
        <name>lui_panel_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="506" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1ae30f66f7f13e12b4b64c58f6a741113d" prot="public" static="no">
        <type>struct <ref refid="struct__lui__scene__s" kindref="compound">_lui_scene_s</ref></type>
        <definition>typedef struct _lui_scene_s lui_scene_t</definition>
        <argsstring></argsstring>
        <name>lui_scene_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="514" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" prot="public" static="no">
        <type>struct <ref refid="struct__lui__touch__input__data__s" kindref="compound">_lui_touch_input_data_s</ref></type>
        <definition>typedef struct _lui_touch_input_data_s lui_touch_input_data_t</definition>
        <argsstring></argsstring>
        <name>lui_touch_input_data_t</name>
        <briefdescription>
<para>Touch Input data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="525" column="23"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1ab10de4e68055b737faab335e831192e2" prot="public" static="no">
        <type>struct <ref refid="struct__lui__disp__drv__s" kindref="compound">_lui_disp_drv_s</ref></type>
        <definition>typedef struct _lui_disp_drv_s lui_dispdrv_t</definition>
        <argsstring></argsstring>
        <name>lui_dispdrv_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="534" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a98e4dc333c2121cf051dd684a9ee6923" prot="public" static="no">
        <type>struct <ref refid="struct__lui__touch__input__dev__s" kindref="compound">_lui_touch_input_dev_s</ref></type>
        <definition>typedef struct _lui_touch_input_dev_s lui_touch_input_dev_t</definition>
        <argsstring></argsstring>
        <name>lui_touch_input_dev_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="540" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="lame__ui_8h_1a3a01b05c6e7d66b39f3e00daaefd3143" prot="public" static="no">
        <type>struct <ref refid="struct__lui__main__s" kindref="compound">_lui_main_s</ref></type>
        <definition>typedef struct _lui_main_s _lui_main_t</definition>
        <argsstring></argsstring>
        <name>_lui_main_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="556" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lame__ui_8h_1ac60e2bda8772731a278995b748eff33f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref></type>
        <definition>const lui_font_t FONT_lui_default</definition>
        <argsstring></argsstring>
        <name>FONT_lui_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="248" column="25" bodyfile="lame_ui.c" bodystart="4755" bodyend="-1" declfile="lame_ui.h" declline="248" declcolumn="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lui__core_1ga96ff45bfbaf38c57a613f1b4a4830893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_init</definition>
        <argsstring>(uint8_t mem_block[], uint16_t size)</argsstring>
        <name>lui_init</name>
        <param>
          <type>uint8_t</type>
          <declname>mem_block</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Initialize the LameUI core. Here user provides LameUI some RAM to create widgets. If and when RAM is not sufficient, widget ceration will fail. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mem_block</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of uint8_t. this will be used as work area </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the alloted memory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="591" column="6" bodyfile="lame_ui.c" bodystart="28" bodyend="48" declfile="lame_ui.h" declline="591" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__core_1gaa4a3c7694929ad0b6c5cd565dd6e7304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_update</definition>
        <argsstring>()</argsstring>
        <name>lui_update</name>
        <briefdescription>
<para>This function updates the UI by reading input and rendering widgets that need rendering. </para>
        </briefdescription>
        <detaileddescription>
<para>User must call this function periodically (e.g. every 20ms) in a loop so no input event is missed. Also, LameUI renders only when widgets need rendering. So, draw calls are not wasted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="602" column="6" bodyfile="lame_ui.c" bodystart="53" bodyend="84" declfile="lame_ui.h" declline="602" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga0d71d83d0757cfbafd9308689e41aaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_add_to_parent</definition>
        <argsstring>(lui_obj_t *obj, lui_obj_t *parent_obj)</argsstring>
        <name>lui_object_add_to_parent</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>parent_obj</declname>
        </param>
        <briefdescription>
<para>Add a child object to a parent object, thus grouping them together. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">//<sp/>Creating<sp/>a<sp/>scene<sp/>which<sp/>will<sp/>be<sp/>a<sp/>parent<sp/>object</highlight></codeline>
<codeline><highlight class="normal">lui_obj_t*<sp/>parent_scene<sp/>=<sp/>lui_scene_create();</highlight></codeline>
<codeline><highlight class="normal">lui_scene_set_active(parent_scene);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Creating<sp/>a<sp/>label<sp/>which<sp/>will<sp/>be<sp/>a<sp/>child<sp/>of<sp/>the<sp/>parent<sp/>scene</highlight></codeline>
<codeline><highlight class="normal">lui_obj_t*<sp/>child_label<sp/>=<sp/>lui_label_create();</highlight></codeline>
<codeline><highlight class="normal">lui_label_set_text(child_label,<sp/>&quot;I<sp/>am<sp/>child<sp/>of<sp/>a<sp/>scene&quot;);</highlight></codeline>
<codeline><highlight class="normal">lui_object_add_to_parent(child_label,<sp/>parent_scene);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Add<sp/>child<sp/>to<sp/>parent</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>child object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>parent object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="634" column="6" bodyfile="lame_ui.c" bodystart="2959" bodyend="2994" declfile="lame_ui.h" declline="634" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga0410a5dd9b906d11881611fc0dfdeea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_remove_from_parent</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_remove_from_parent</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Remove an object from its current parent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Child object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="641" column="6" bodyfile="lame_ui.c" bodystart="2996" bodyend="3024" declfile="lame_ui.h" declline="641" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gaed4bb7d9c2764c6786708535fad7cf67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_area</definition>
        <argsstring>(lui_obj_t *obj, uint16_t width, uint16_t height)</argsstring>
        <name>lui_object_set_area</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set drawing area of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="650" column="6" bodyfile="lame_ui.c" bodystart="3098" bodyend="3125" declfile="lame_ui.h" declline="650" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga7a2a43446875ea180d2a5f1103f0a547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_width</definition>
        <argsstring>(lui_obj_t *obj, uint16_t width)</argsstring>
        <name>lui_object_set_width</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set width of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="658" column="6" bodyfile="lame_ui.c" bodystart="3127" bodyend="3132" declfile="lame_ui.h" declline="658" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga0e9b5ea44b5698a9fac1d1a8440e378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_height</definition>
        <argsstring>(lui_obj_t *obj, uint16_t height)</argsstring>
        <name>lui_object_set_height</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set height of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="666" column="6" bodyfile="lame_ui.c" bodystart="3134" bodyend="3139" declfile="lame_ui.h" declline="666" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gaf7bedc873edb862f9c1f8b063f17f839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_position</definition>
        <argsstring>(lui_obj_t *obj, uint16_t x, uint16_t y)</argsstring>
        <name>lui_object_set_position</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set position of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="675" column="6" bodyfile="lame_ui.c" bodystart="3026" bodyend="3082" declfile="lame_ui.h" declline="675" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gac6ab60ef6a5e52ec9dd37dcb9cf117c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_x_pos</definition>
        <argsstring>(lui_obj_t *obj, uint16_t x)</argsstring>
        <name>lui_object_set_x_pos</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set only x position of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="683" column="6" bodyfile="lame_ui.c" bodystart="3084" bodyend="3089" declfile="lame_ui.h" declline="683" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga7cf13aeef87bd34c6e25e1bf410fe0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_y_pos</definition>
        <argsstring>(lui_obj_t *obj, uint16_t y)</argsstring>
        <name>lui_object_set_y_pos</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set only y position of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="691" column="6" bodyfile="lame_ui.c" bodystart="3091" bodyend="3096" declfile="lame_ui.h" declline="691" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga40a7f5963092cc887757eb4c72342caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_border_color</definition>
        <argsstring>(lui_obj_t *obj, uint16_t border_color)</argsstring>
        <name>lui_object_set_border_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>border_color</declname>
        </param>
        <briefdescription>
<para>Set border color of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>border_color</parametername>
</parameternamelist>
<parameterdescription>
<para>border color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="699" column="6" bodyfile="lame_ui.c" bodystart="3141" bodyend="3149" declfile="lame_ui.h" declline="699" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gaa3e5b7c777ceee12a215eaa6bc45554b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_border_visibility</definition>
        <argsstring>(lui_obj_t *obj, uint8_t is_visible)</argsstring>
        <name>lui_object_set_border_visibility</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_visible</declname>
        </param>
        <briefdescription>
<para>Set border&apos;s visibility of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>1: visible; 0: invisible </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="707" column="6" bodyfile="lame_ui.c" bodystart="3151" bodyend="3159" declfile="lame_ui.h" declline="707" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga3c99e7b2155290f9b73b78ba87c3d34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_bg_color</definition>
        <argsstring>(lui_obj_t *obj, uint16_t color)</argsstring>
        <name>lui_object_set_bg_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set background color of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bg_color</parametername>
</parameternamelist>
<parameterdescription>
<para>background color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="715" column="6" bodyfile="lame_ui.c" bodystart="3161" bodyend="3169" declfile="lame_ui.h" declline="715" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gae9d2e2e1998f2603a3a6d24d08b5b64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_callback</definition>
        <argsstring>(lui_obj_t *obj, void(*obj_event_cb)(lui_obj_t *))</argsstring>
        <name>lui_object_set_callback</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *)</type>
          <declname>obj_event_cb</declname>
        </param>
        <briefdescription>
<para>Set event call back function for input handling. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called when an event occurs against this object</para>
<para><bold>Example:</bold> <programlisting><codeline><highlight class="normal">lui_obj_t*<sp/>my_button;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>button_callback(lui_obj_t*<sp/>btn_obj)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Do<sp/>something</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">my_button<sp/>=<sp/>lui_button_create();</highlight></codeline>
<codeline><highlight class="normal">lui_object_set_callback(my_button,<sp/>button_callback);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_event_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>function pointer of the callback function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="736" column="6" bodyfile="lame_ui.c" bodystart="3171" bodyend="3176" declfile="lame_ui.h" declline="736" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gac20b18b75c1e5764e5cb00dc3bed6808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_object_get_state</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_get_state</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get the input state of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t state ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="744" column="8" bodyfile="lame_ui.c" bodystart="3178" bodyend="3183" declfile="lame_ui.h" declline="744" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga580b2bdece45808266791573d874aabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_object_get_event</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_get_event</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get input event of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t event ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="752" column="8" bodyfile="lame_ui.c" bodystart="3185" bodyend="3190" declfile="lame_ui.h" declline="752" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga15a349bf7d1abcbc475f009f7dd14dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_visibility</definition>
        <argsstring>(lui_obj_t *obj, uint8_t visible)</argsstring>
        <name>lui_object_set_visibility</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Set visibility of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>1: visible; 0: hidden </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>When object becomes visible, set needs_refresh bit for itself recursively. When object becomes invisble, set needs_refresh bit for its parent recursively.</para>
        </inbodydescription>
        <location file="lame_ui.h" line="760" column="6" bodyfile="lame_ui.c" bodystart="3192" bodyend="3227" declfile="lame_ui.h" declline="760" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1gae97c5a363860c5fa7de4d40f167592a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_object_set_layer</definition>
        <argsstring>(lui_obj_t *obj, uint8_t layer_index)</argsstring>
        <name>lui_object_set_layer</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Set rendering layer index of an object. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects in higher layer will be rendered over the objects in lower layer. If 2 or more objects are in same layer, they&apos;re rendered based on the sequence they&apos;re added to parent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>layer index (0 - 128) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="772" column="6" bodyfile="lame_ui.c" bodystart="3248" bodyend="3298" declfile="lame_ui.h" declline="772" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga14ac387f2a2e89bdda2773f21e79d087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lui_object_get_layer</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_object_get_layer</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get rendering layer index of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int16_t layer index. Returns -1 if object is NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="780" column="9" bodyfile="lame_ui.c" bodystart="3300" bodyend="3306" declfile="lame_ui.h" declline="780" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga36344388e628fde997ebafaf75a43ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lui_object_set_enable_input</definition>
        <argsstring>(lui_obj_t *obj, uint8_t is_enabled)</argsstring>
        <name>lui_object_set_enable_input</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_enabled</declname>
        </param>
        <briefdescription>
<para>Enable or disble input handling of an object. If disabled, object won&apos;t cause input event callback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>1: input enabled; 0: input disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t 1: success; 0: failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="790" column="9" bodyfile="lame_ui.c" bodystart="3229" bodyend="3246" declfile="lame_ui.h" declline="790" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga035918521a6c575108b64d7e960bb645" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* _lui_object_create</definition>
        <argsstring>(void)</argsstring>
        <name>_lui_object_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a generic object with default values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="800" column="11" bodyfile="lame_ui.c" bodystart="2934" bodyend="2957" declfile="lame_ui.h" declline="800" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga4c6477031513cc6b7b71aaf99e1ee06c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_object_set_need_refresh</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_object_set_need_refresh</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Set needs_refresh flag for an object. This flag determines if onject will be redrawn. </para>
        </briefdescription>
        <detaileddescription>
<para>When setting this flag for an object, flags of children and/or parent might also be set, depending on the requirement.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="811" column="6" bodyfile="lame_ui.c" bodystart="3466" bodyend="3534" declfile="lame_ui.h" declline="811" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga4dacce477148500e23838ed091d2ca24" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_object_render_parent_with_children</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_object_render_parent_with_children</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Render an object along with all its children (if any) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_parent</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="819" column="6" bodyfile="lame_ui.c" bodystart="3328" bodyend="3397" declfile="lame_ui.h" declline="819" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga3de65dadcfd95ac4fef0845da6e5392d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_object_render</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_object_render</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Render a single object (and NOT its children) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>target object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="827" column="6" bodyfile="lame_ui.c" bodystart="3399" bodyend="3464" declfile="lame_ui.h" declline="827" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__object_1ga38b59b74ad804604873ede1015ed5663" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _lui_obj_layer_cmprtr</definition>
        <argsstring>(const void *p1, const void *p2)</argsstring>
        <name>_lui_obj_layer_cmprtr</name>
        <param>
          <type>const void *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
<para>Compares two objects&apos; layers and returns (layer1 - layer2) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object 2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int (layer1 - layer2) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="837" column="12" declfile="lame_ui.h" declline="837" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__label_1ga83cc1ae5b6c0601af8614574e019e8f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_label_create</definition>
        <argsstring>(void)</argsstring>
        <name>lui_label_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a label with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* Created label object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="873" column="11" bodyfile="lame_ui.c" bodystart="125" bodyend="155" declfile="lame_ui.h" declline="873" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__label_1ga176b351997c1058f4d6fc9bc86942429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_label_draw</definition>
        <argsstring>(lui_obj_t *obj_lbl)</argsstring>
        <name>lui_label_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_lbl</declname>
        </param>
        <briefdescription>
<para>Draw a <computeroutput>label</computeroutput> widget. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>label object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="880" column="6" bodyfile="lame_ui.c" bodystart="96" bodyend="123" declfile="lame_ui.h" declline="880" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__label_1ga1ae5970ffa3b6be91e483a8618db71c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_label_set_font</definition>
        <argsstring>(lui_obj_t *obj_lbl, const lui_font_t *font)</argsstring>
        <name>lui_label_set_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_lbl</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set font of a label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_lbl</parametername>
</parameternamelist>
<parameterdescription>
<para>label object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font object. If NULL is passed, default font will be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="888" column="6" bodyfile="lame_ui.c" bodystart="157" bodyend="170" declfile="lame_ui.h" declline="888" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__label_1ga45528354a67fe65f23435338f970ba33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_label_set_text</definition>
        <argsstring>(lui_obj_t *obj_lbl, const char *text)</argsstring>
        <name>lui_label_set_text</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_lbl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set text of a label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_lbl</parametername>
</parameternamelist>
<parameterdescription>
<para>label object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>char array of text </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="896" column="6" bodyfile="lame_ui.c" bodystart="172" bodyend="185" declfile="lame_ui.h" declline="896" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__label_1gafba0abb6ce13e87b7efa3e0390269094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_label_set_text_color</definition>
        <argsstring>(lui_obj_t *obj_lbl, uint16_t text_color)</argsstring>
        <name>lui_label_set_text_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_lbl</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>text_color</declname>
        </param>
        <briefdescription>
<para>Set forecolor of a label. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this only changes text color and NOT background color</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_lbl</parametername>
</parameternamelist>
<parameterdescription>
<para>label object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="905" column="6" bodyfile="lame_ui.c" bodystart="187" bodyend="201" declfile="lame_ui.h" declline="905" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga5facac71c6d8909ae573b7c518ebb386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_linechart_create</definition>
        <argsstring>()</argsstring>
        <name>lui_linechart_create</name>
        <briefdescription>
<para>Create a linechart with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* Created linechart object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="939" column="11" bodyfile="lame_ui.c" bodystart="360" bodyend="400" declfile="lame_ui.h" declline="939" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga3169eb03a77d57752ba70b71c28592fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_draw</definition>
        <argsstring>(lui_obj_t *obj_linechart)</argsstring>
        <name>lui_linechart_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <briefdescription>
<para>Draw a linechart. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="946" column="6" bodyfile="lame_ui.c" bodystart="218" bodyend="355" declfile="lame_ui.h" declline="946" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga79ea0c8ddadc0fe5c2fc0ff5ebe4b88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_grid_count</definition>
        <argsstring>(lui_obj_t *obj_linechart, uint16_t hor_lines, uint16_t vert_lines)</argsstring>
        <name>lui_linechart_set_grid_count</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>hor_lines</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vert_lines</declname>
        </param>
        <briefdescription>
<para>Set number of horizontal and vertical grid lines in a linechart. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hor_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>number of horizontal grid lines </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vert_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertical grid lines </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="955" column="6" bodyfile="lame_ui.c" bodystart="402" bodyend="417" declfile="lame_ui.h" declline="955" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1gaf75ead7c255c81d4436fba1d4e3091f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_grid_color</definition>
        <argsstring>(lui_obj_t *obj_linechart, uint16_t color)</argsstring>
        <name>lui_linechart_set_grid_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set color of grid lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="963" column="6" bodyfile="lame_ui.c" bodystart="419" bodyend="433" declfile="lame_ui.h" declline="963" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga44e534594549d38910a2f617d81ad408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_grid_visible</definition>
        <argsstring>(lui_obj_t *obj_linechart, uint8_t state)</argsstring>
        <name>lui_linechart_set_grid_visible</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set visibility of grid lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>0: hidden, 1: visible (default) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="971" column="6" bodyfile="lame_ui.c" bodystart="435" bodyend="449" declfile="lame_ui.h" declline="971" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga462e794b64cfa672d7207490412785cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_line_color</definition>
        <argsstring>(lui_obj_t *obj_linechart, uint16_t line_color)</argsstring>
        <name>lui_linechart_set_line_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>line_color</declname>
        </param>
        <briefdescription>
<para>Set color of plot line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="979" column="6" bodyfile="lame_ui.c" bodystart="451" bodyend="465" declfile="lame_ui.h" declline="979" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga043fb5fc50cb96fb3ea3bb14110328bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_data_auto_scale</definition>
        <argsstring>(lui_obj_t *obj_linechart, uint8_t auto_scale)</argsstring>
        <name>lui_linechart_set_data_auto_scale</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>auto_scale</declname>
        </param>
        <briefdescription>
<para>Set whether to apply automatic scaling on the data source or not. If auto scale is enabled, graph will always be in the boundary of drawing area. If auto scale is disabled, user must provide manual range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auto_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>1: enabled (default), 0: disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="988" column="6" bodyfile="lame_ui.c" bodystart="467" bodyend="481" declfile="lame_ui.h" declline="988" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1ga906c519f1c9ba0cac3e0e47b70887ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_data_range</definition>
        <argsstring>(lui_obj_t *obj_linechart, double y_min, double y_max)</argsstring>
        <name>lui_linechart_set_data_range</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y_max</declname>
        </param>
        <briefdescription>
<para>Set data range of line chart when auto scaling is disabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value of y axis data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value of y axis data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="997" column="6" bodyfile="lame_ui.c" bodystart="483" bodyend="499" declfile="lame_ui.h" declline="997" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__linechart_1gada31833542d8eb263b960fc3575b42f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_linechart_set_data_source</definition>
        <argsstring>(lui_obj_t *obj_linechart, double *source, uint16_t points)</argsstring>
        <name>lui_linechart_set_data_source</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_linechart</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Set data source of the line chart. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_linechart</parametername>
</parameternamelist>
<parameterdescription>
<para>linechart object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>array of data points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>number of data points </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1006" column="6" bodyfile="lame_ui.c" bodystart="501" bodyend="516" declfile="lame_ui.h" declline="1006" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__button_1gae3764b62e449b19e779892553ef6ed67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_button_create</definition>
        <argsstring>()</argsstring>
        <name>lui_button_create</name>
        <briefdescription>
<para>Create a button with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created button object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1053" column="11" bodyfile="lame_ui.c" bodystart="596" bodyend="630" declfile="lame_ui.h" declline="1053" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__button_1gad887047af16cb14b720cf1cf8116c1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_button_draw</definition>
        <argsstring>(lui_obj_t *obj_btn)</argsstring>
        <name>lui_button_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_btn</declname>
        </param>
        <briefdescription>
<para>Draw a button object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>button object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1060" column="6" bodyfile="lame_ui.c" bodystart="533" bodyend="591" declfile="lame_ui.h" declline="1060" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__button_1gaec9c0f394998052cbc800530f69f3a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_button_set_label_text</definition>
        <argsstring>(lui_obj_t *obj_btn, const char *text)</argsstring>
        <name>lui_button_set_label_text</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_btn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set the text of the button&apos;s label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>button object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>char array of text </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1068" column="6" bodyfile="lame_ui.c" bodystart="632" bodyend="644" declfile="lame_ui.h" declline="1068" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__button_1ga7136a562c97ee76a05e8b9bff807ca3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_button_set_label_color</definition>
        <argsstring>(lui_obj_t *obj_btn, uint16_t color)</argsstring>
        <name>lui_button_set_label_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_btn</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set text color of button&apos;s label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>button object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit text color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1076" column="6" bodyfile="lame_ui.c" bodystart="646" bodyend="660" declfile="lame_ui.h" declline="1076" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__button_1ga6418e81c76d0182534e1decc65f417b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_button_set_label_font</definition>
        <argsstring>(lui_obj_t *obj_btn, const lui_font_t *font)</argsstring>
        <name>lui_button_set_label_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_btn</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set font of button&apos;s label. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>button object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font object. If NULL is passed, default font will be used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1084" column="6" bodyfile="lame_ui.c" bodystart="662" bodyend="675" declfile="lame_ui.h" declline="1084" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__button_1gaf719ba472084dcdb38418184b63bd323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_button_set_extra_colors</definition>
        <argsstring>(lui_obj_t *obj_btn, uint16_t pressed_color, uint16_t selection_color)</argsstring>
        <name>lui_button_set_extra_colors</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_btn</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>pressed_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>selection_color</declname>
        </param>
        <briefdescription>
<para>Set other colors of button object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>button object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pressed_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of button when it&apos;s pressed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selection_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of button when it&apos;s selected (hovering) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1093" column="6" bodyfile="lame_ui.c" bodystart="677" bodyend="692" declfile="lame_ui.h" declline="1093" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1ga331cedddf1136c8e3b2fa0a3d1c8f9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_switch_create</definition>
        <argsstring>()</argsstring>
        <name>lui_switch_create</name>
        <briefdescription>
<para>Create a switch with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created switch object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1132" column="11" bodyfile="lame_ui.c" bodystart="1232" bodyend="1264" declfile="lame_ui.h" declline="1132" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1gafd67bf0ba01cf6c48b3f6e779a9ff95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_switch_draw</definition>
        <argsstring>(lui_obj_t *obj_swtch)</argsstring>
        <name>lui_switch_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_swtch</declname>
        </param>
        <briefdescription>
<para>Draw a switch object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>switch object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1139" column="6" bodyfile="lame_ui.c" bodystart="1181" bodyend="1230" declfile="lame_ui.h" declline="1139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1gad099ebc520d4213febf9e5e8710aaf12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_switch_set_extra_colors</definition>
        <argsstring>(lui_obj_t *obj_swtch, uint16_t knob_off_color, uint16_t knob_on_color, uint16_t selection_color)</argsstring>
        <name>lui_switch_set_extra_colors</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_swtch</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>knob_off_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>knob_on_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>selection_color</declname>
        </param>
        <briefdescription>
<para>Set extra colors of switch object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>switch object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>knob_off_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of knob when switch is off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>knob_on_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of knob when switch is on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selection_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color when switch is selected </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1149" column="6" bodyfile="lame_ui.c" bodystart="1266" bodyend="1283" declfile="lame_ui.h" declline="1149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1ga0793cf720943fa01792f6bb86cb5b00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_switch_get_value</definition>
        <argsstring>(lui_obj_t *obj_swtch)</argsstring>
        <name>lui_switch_get_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_swtch</declname>
        </param>
        <briefdescription>
<para>Get value of a switch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>switch object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t value of switch. 0: Off, 1: On, -1: Error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1157" column="8" bodyfile="lame_ui.c" bodystart="1285" bodyend="1295" declfile="lame_ui.h" declline="1157" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1gacd9eafcf927ab9af5e842f5dc31fd558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_switch_set_value</definition>
        <argsstring>(lui_obj_t *obj_swtch, uint8_t value)</argsstring>
        <name>lui_switch_set_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_swtch</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of switch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>switch object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>1: switch on, 0: switch off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1165" column="6" bodyfile="lame_ui.c" bodystart="1297" bodyend="1310" declfile="lame_ui.h" declline="1165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1ga4453c8ab068c81d45c1029a280c45e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_switch_set_on</definition>
        <argsstring>(lui_obj_t *obj_swtch)</argsstring>
        <name>lui_switch_set_on</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_swtch</declname>
        </param>
        <briefdescription>
<para>Set switch to ON (value: 1) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>switch object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1172" column="6" bodyfile="lame_ui.c" bodystart="1312" bodyend="1315" declfile="lame_ui.h" declline="1172" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__switch_1gaeef193f35434dde5845a0132ce7f4c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_switch_set_off</definition>
        <argsstring>(lui_obj_t *obj_swtch)</argsstring>
        <name>lui_switch_set_off</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_swtch</declname>
        </param>
        <briefdescription>
<para>Set switch to OFF (value: 0) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_swtch</parametername>
</parameternamelist>
<parameterdescription>
<para>switch object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1179" column="6" bodyfile="lame_ui.c" bodystart="1317" bodyend="1320" declfile="lame_ui.h" declline="1179" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1ga9742a1e9706106024911e0004d5bf2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_checkbox_create</definition>
        <argsstring>()</argsstring>
        <name>lui_checkbox_create</name>
        <briefdescription>
<para>Create a checkbox object with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1214" column="11" bodyfile="lame_ui.c" bodystart="1388" bodyend="1420" declfile="lame_ui.h" declline="1214" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1ga36738f45907e976f8bf92595352ea968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_checkbox_draw</definition>
        <argsstring>(lui_obj_t *obj_checkbox)</argsstring>
        <name>lui_checkbox_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_checkbox</declname>
        </param>
        <briefdescription>
<para>Draw a checbox object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_checkbox</parametername>
</parameternamelist>
<parameterdescription>
<para>checkbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1221" column="6" bodyfile="lame_ui.c" bodystart="1337" bodyend="1386" declfile="lame_ui.h" declline="1221" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1gae501d0976d301bc3c03e11b28eee654a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_checkbox_set_extra_colors</definition>
        <argsstring>(lui_obj_t *obj_checkbox, uint16_t bg_checked_color, uint16_t tick_color, uint16_t selection_color)</argsstring>
        <name>lui_checkbox_set_extra_colors</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_checkbox</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bg_checked_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>tick_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>selection_color</declname>
        </param>
        <briefdescription>
<para>Set extra colors of checkbox. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_checkbox</parametername>
</parameternamelist>
<parameterdescription>
<para>checkbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bg_checked_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit background color of checkbox when in checked status </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tick_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of the check mark (tick) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selection_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of checkbox when it is selected (hovered) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1231" column="6" bodyfile="lame_ui.c" bodystart="1422" bodyend="1439" declfile="lame_ui.h" declline="1231" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1ga8a995bd50bfb68ec15ad27af875b7048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_checkbox_get_value</definition>
        <argsstring>(lui_obj_t *obj_checkbox)</argsstring>
        <name>lui_checkbox_get_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_checkbox</declname>
        </param>
        <briefdescription>
<para>Get value of checkbox. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_checkbox</parametername>
</parameternamelist>
<parameterdescription>
<para>checkbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t Value of checkbox. 0: Unchecked, 1: Checked, -1: Error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1239" column="8" bodyfile="lame_ui.c" bodystart="1441" bodyend="1451" declfile="lame_ui.h" declline="1239" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1ga44562059aeab006ce233adbe64f3ddca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_checkbox_set_value</definition>
        <argsstring>(lui_obj_t *obj_checkbox, uint8_t value)</argsstring>
        <name>lui_checkbox_set_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_checkbox</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set checkbox value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_checkbox</parametername>
</parameternamelist>
<parameterdescription>
<para>checkbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>0: Unchecked, 1: Checked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1247" column="6" bodyfile="lame_ui.c" bodystart="1453" bodyend="1466" declfile="lame_ui.h" declline="1247" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1gaa7343339b91349d29de783a1a5f10338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_checkbox_set_checked</definition>
        <argsstring>(lui_obj_t *obj_checkbox)</argsstring>
        <name>lui_checkbox_set_checked</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_checkbox</declname>
        </param>
        <briefdescription>
<para>Set checkbox status to Checked (value: 1) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_checkbox</parametername>
</parameternamelist>
<parameterdescription>
<para>checkbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1254" column="6" bodyfile="lame_ui.c" bodystart="1468" bodyend="1471" declfile="lame_ui.h" declline="1254" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__checkbox_1gad54464b47322e3c6b4918a0c43bb5a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_checkbox_set_unchecked</definition>
        <argsstring>(lui_obj_t *obj_checkbox)</argsstring>
        <name>lui_checkbox_set_unchecked</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_checkbox</declname>
        </param>
        <briefdescription>
<para>Set checkbox status to Unchecked (value: 0) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_checkbox</parametername>
</parameternamelist>
<parameterdescription>
<para>checkbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1261" column="6" bodyfile="lame_ui.c" bodystart="1473" bodyend="1476" declfile="lame_ui.h" declline="1261" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga358faa44037147a07840905d98def2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_slider_create</definition>
        <argsstring>()</argsstring>
        <name>lui_slider_create</name>
        <briefdescription>
<para>Create a slider object with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created slider object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1301" column="11" bodyfile="lame_ui.c" bodystart="1530" bodyend="1566" declfile="lame_ui.h" declline="1301" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga89456da8b3d00d85366cd97a68ea6ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_slider_draw</definition>
        <argsstring>(lui_obj_t *obj_slider)</argsstring>
        <name>lui_slider_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <briefdescription>
<para>Draw slider object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1308" column="6" bodyfile="lame_ui.c" bodystart="1493" bodyend="1528" declfile="lame_ui.h" declline="1308" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga695e69ff0ae901a26aeebbfa467e6ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_slider_set_extra_colors</definition>
        <argsstring>(lui_obj_t *obj_slider, uint16_t knob_color, uint16_t bg_filled_color, uint16_t selection_color)</argsstring>
        <name>lui_slider_set_extra_colors</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>knob_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bg_filled_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>selection_color</declname>
        </param>
        <briefdescription>
<para>Set extra colors of slider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>knob_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of slider knob </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bg_filled_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit background color of the filled section of slider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selection_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of slider when it&apos;s selected (hovered) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1318" column="6" bodyfile="lame_ui.c" bodystart="1568" bodyend="1585" declfile="lame_ui.h" declline="1318" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga7b4465c8e22c0b89b2fecfbc67c07cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_slider_set_value</definition>
        <argsstring>(lui_obj_t *obj_slider, int16_t value)</argsstring>
        <name>lui_slider_set_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of slider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value of slider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1326" column="6" bodyfile="lame_ui.c" bodystart="1587" bodyend="1620" declfile="lame_ui.h" declline="1326" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga4134aedb43ab207c9db42606a7bb2bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_slider_set_range</definition>
        <argsstring>(lui_obj_t *obj_slider, int16_t range_min, int16_t range_max)</argsstring>
        <name>lui_slider_set_range</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>range_min</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>range_max</declname>
        </param>
        <briefdescription>
<para>Set minimum and maximum values of slider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value of slider </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value of slider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1335" column="6" bodyfile="lame_ui.c" bodystart="1622" bodyend="1646" declfile="lame_ui.h" declline="1335" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1gaf2d084b05fbbcce0d315fc70420709ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lui_slider_get_value</definition>
        <argsstring>(lui_obj_t *obj_slider)</argsstring>
        <name>lui_slider_get_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <briefdescription>
<para>Get value of slider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int16_t value of slider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1343" column="9" bodyfile="lame_ui.c" bodystart="1648" bodyend="1658" declfile="lame_ui.h" declline="1343" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga6d2b4a71de9a68d2575d1572f71fbcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lui_slider_get_min_value</definition>
        <argsstring>(lui_obj_t *obj_slider)</argsstring>
        <name>lui_slider_get_min_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <briefdescription>
<para>Get minimum value of slider&apos;s range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int16_t minimum value of slider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1351" column="9" bodyfile="lame_ui.c" bodystart="1660" bodyend="1671" declfile="lame_ui.h" declline="1351" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__slider_1ga9a0709df634fac8694c67c91fe18d64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lui_slider_get_max_value</definition>
        <argsstring>(lui_obj_t *obj_slider)</argsstring>
        <name>lui_slider_get_max_value</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_slider</declname>
        </param>
        <briefdescription>
<para>Get maximum value of slider&apos;s range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_slider</parametername>
</parameternamelist>
<parameterdescription>
<para>slider object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int16_t maximum value of slider </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1359" column="9" bodyfile="lame_ui.c" bodystart="1673" bodyend="1684" declfile="lame_ui.h" declline="1359" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1gad7eda3882ef90983dd2fac598e6699a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_list_create</definition>
        <argsstring>()</argsstring>
        <name>lui_list_create</name>
        <briefdescription>
<para>Create a list object with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created list object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1399" column="11" bodyfile="lame_ui.c" bodystart="727" bodyend="764" declfile="lame_ui.h" declline="1399" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga04c3b17479a68f18ad15e9209e79b225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_draw</definition>
        <argsstring>(lui_obj_t *obj_list)</argsstring>
        <name>lui_list_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <briefdescription>
<para>Draw list object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1406" column="6" bodyfile="lame_ui.c" bodystart="706" bodyend="725" declfile="lame_ui.h" declline="1406" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga44ee84ed9cee3f474917ce51766582c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_list_add_item</definition>
        <argsstring>(lui_obj_t *obj_list, const char *text)</argsstring>
        <name>lui_list_add_item</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Add an item to a list. This creates a button object and returns it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>text of the item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lui_obj_t* item of the list as a button object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1415" column="11" bodyfile="lame_ui.c" bodystart="880" bodyend="922" declfile="lame_ui.h" declline="1415" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1gabfcf03c5664bd32033468f249cee095f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_delete_item</definition>
        <argsstring>(lui_obj_t *obj_item_addr)</argsstring>
        <name>lui_list_delete_item</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_item_addr</declname>
        </param>
        <briefdescription>
<para>Deletes an item from list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_item_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>the button item to be deleted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1422" column="6" bodyfile="lame_ui.c" bodystart="924" bodyend="937" declfile="lame_ui.h" declline="1422" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga50b081682a8bc9ab50e229d432605b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_prepare</definition>
        <argsstring>(lui_obj_t *obj_list)</argsstring>
        <name>lui_list_prepare</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <briefdescription>
<para>Prepares a list for final render. This function must be called by the user after creating a list/making changes in a list. Else, those changes won&apos;t be reflected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1431" column="6" bodyfile="lame_ui.c" bodystart="766" bodyend="878" declfile="lame_ui.h" declline="1431" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga7b3ca3fb28dbf45735f386c47fe442eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_set_item_min_height</definition>
        <argsstring>(lui_obj_t *obj_list, uint8_t height)</argsstring>
        <name>lui_list_set_item_min_height</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets minimum height of each item in a list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum height of an item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1439" column="6" bodyfile="lame_ui.c" bodystart="939" bodyend="962" declfile="lame_ui.h" declline="1439" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga78b10f123fed4442a355aded019192ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_set_font</definition>
        <argsstring>(lui_obj_t *obj_list, const lui_font_t *font)</argsstring>
        <name>lui_list_set_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set font of list. If none is set, default font is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font of list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1447" column="6" bodyfile="lame_ui.c" bodystart="964" bodyend="981" declfile="lame_ui.h" declline="1447" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga7f3880daf82482a5607cab5e0cb29312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_set_nav_btn_label_color</definition>
        <argsstring>(lui_obj_t *obj_list, uint16_t color)</argsstring>
        <name>lui_list_set_nav_btn_label_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Sets label text color of navigation buttons of a list. Navigation buttons are used to change current page of list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1456" column="6" bodyfile="lame_ui.c" bodystart="983" bodyend="994" declfile="lame_ui.h" declline="1456" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga333597198d7084bb6043f2d1138edc70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_set_nav_btn_bg_color</definition>
        <argsstring>(lui_obj_t *obj_list, uint16_t color)</argsstring>
        <name>lui_list_set_nav_btn_bg_color</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Sets label background color of navigation buttons of a list. Navigation buttons are used to change current page of list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1465" column="6" bodyfile="lame_ui.c" bodystart="996" bodyend="1007" declfile="lame_ui.h" declline="1465" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga68f52172597db059c42dc40341e8837d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_set_nav_btn_extra_colors</definition>
        <argsstring>(lui_obj_t *obj_list, uint16_t pressed_color, uint16_t selection_color)</argsstring>
        <name>lui_list_set_nav_btn_extra_colors</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>pressed_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>selection_color</declname>
        </param>
        <briefdescription>
<para>Sets extra colors of list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pressed_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of list item when pressed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selection_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of list item when selected (hovered) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1474" column="6" bodyfile="lame_ui.c" bodystart="1009" bodyend="1020" declfile="lame_ui.h" declline="1474" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga0d18fe32b64aeaace3f49809cf375a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_list_set_page_index</definition>
        <argsstring>(lui_obj_t *obj, uint8_t index)</argsstring>
        <name>lui_list_set_page_index</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Sets current page index of a list. The current page is rendered. Has no effect if index is out of bound. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of current page </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1483" column="6" bodyfile="lame_ui.c" bodystart="1093" bodyend="1142" declfile="lame_ui.h" declline="1483" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga28e33de3b1ab46c24e75089b6730fa93" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_list_add_nav_buttons</definition>
        <argsstring>(lui_obj_t *obj_list)</argsstring>
        <name>_lui_list_add_nav_buttons</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <briefdescription>
<para>Adds navigation buttons to list. Only called by the library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1491" column="6" bodyfile="lame_ui.c" bodystart="1072" bodyend="1091" declfile="lame_ui.h" declline="1491" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga998a8db32df4974f8a0114cfbaa5f9e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_list_nav_btn_cb</definition>
        <argsstring>(lui_obj_t *obj_list)</argsstring>
        <name>_lui_list_nav_btn_cb</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <briefdescription>
<para>Sets callback function to handle nav button events. Only called by the library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1500" column="6" bodyfile="lame_ui.c" bodystart="1144" bodyend="1165" declfile="lame_ui.h" declline="1500" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__list_1ga113b2b881f1deeebf321838a26af1eda" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_list_add_button_obj</definition>
        <argsstring>(lui_obj_t *obj_list, lui_obj_t *obj_btn)</argsstring>
        <name>_lui_list_add_button_obj</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_list</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_btn</declname>
        </param>
        <briefdescription>
<para>Adds actual button objects that are created during <computeroutput><ref refid="group__lui__list_1ga44ee84ed9cee3f474917ce51766582c6" kindref="member">lui_list_add_item()</ref></computeroutput> call. Only called by the library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_list</parametername>
</parameternamelist>
<parameterdescription>
<para>list object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_btn</parametername>
</parameternamelist>
<parameterdescription>
<para>button object, which is a list item </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1510" column="6" bodyfile="lame_ui.c" bodystart="1048" bodyend="1070" declfile="lame_ui.h" declline="1510" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga60ea2e3e4af851bce7b4280a869438ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_btngrid_create</definition>
        <argsstring>()</argsstring>
        <name>lui_btngrid_create</name>
        <briefdescription>
<para>Create a buttongrid with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created buttongrid object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1646" column="11" bodyfile="lame_ui.c" bodystart="1804" bodyend="1848" declfile="lame_ui.h" declline="1646" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gaa9a9febb315d359420be30fea2d9657d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_draw</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_btngrid_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Draw a buttongrid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Draw a button only if the btngrid needs full render, or when a buttons index matches an active button&apos;s index</para>
<para>This is to handle when a checkable button lost its focus but check state is changed to &quot;Checked&quot;. Or, when manually the check state is set</para>
        </inbodydescription>
        <location file="lame_ui.h" line="1653" column="6" bodyfile="lame_ui.c" bodystart="1700" bodyend="1802" declfile="lame_ui.h" declline="1653" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga03a8859464594c353885a559c5026328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_textmap</definition>
        <argsstring>(lui_obj_t *obj, const char *texts[])</argsstring>
        <name>lui_btngrid_set_textmap</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>texts</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Set texts of all buttons as a map. The grid is created based on this text map. Each item in the array makes a column and <computeroutput>\n</computeroutput> (newline) cretaes a row. The text map&apos;s last item must be a <computeroutput>\0</computeroutput>. This marks the end of the grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>texts</parametername>
</parameternamelist>
<parameterdescription>
<para>array of strings to be used as text map. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1663" column="6" bodyfile="lame_ui.c" bodystart="1850" bodyend="1915" declfile="lame_ui.h" declline="1663" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gaf32f56d6e1fd0e6a59dc558a841d62ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_propertymap</definition>
        <argsstring>(lui_obj_t *obj, const uint8_t properties[])</argsstring>
        <name>lui_btngrid_set_propertymap</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>properties</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Set properties of all buttons as a map. </para>
        </briefdescription>
        <detaileddescription>
<para>Each item in the array is a 8-bit value denoting various properties of a button of the buttongrid. The size of array must be same as the number of buttons in the button grid.The structure of a property byte is as follows:</para>
<para><table rows="6" cols="3"><row>
<entry thead="yes"><para>Bit </para>
</entry><entry thead="yes"><para>Meaning </para>
</entry><entry thead="yes"><para>Value  </para>
</entry></row>
<row>
<entry thead="no"><para>7 </para>
</entry><entry thead="no"><para>Is button checked? </para>
</entry><entry thead="no"><para>0: Unchecked, <linebreak/>
1: Checked  </para>
</entry></row>
<row>
<entry thead="no"><para>6 </para>
</entry><entry thead="no"><para>Is button disabled? </para>
</entry><entry thead="no"><para>0: NOT disabled (i.e., Enabled), <linebreak/>
1: Disabled  </para>
</entry></row>
<row>
<entry thead="no"><para>5 </para>
</entry><entry thead="no"><para>Is button hidden? </para>
</entry><entry thead="no"><para>0: NOT hidden (i.e., visible), <linebreak/>
1: Hidden  </para>
</entry></row>
<row>
<entry thead="no"><para>4 </para>
</entry><entry thead="no"><para>Is button checkable? </para>
</entry><entry thead="no"><para>0: NOT checkable, <linebreak/>
1: Checkable  </para>
</entry></row>
<row>
<entry thead="no"><para>3:0 </para>
</entry><entry thead="no"><para>Button width unit </para>
</entry><entry thead="no"><para>1-15, <linebreak/>
Setting it to 0 has no effect  </para>
</entry></row>
</table>
</para>
<para>Example: To make a checkable button with 3 unit width and to set it to <computeroutput>checked</computeroutput> status, property byte should be: (1 &lt;&lt; 7) | (1 &lt;&lt; 4) | 3</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>array of property bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1686" column="6" bodyfile="lame_ui.c" bodystart="1917" bodyend="1935" declfile="lame_ui.h" declline="1686" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga0fba296e6cbf020c2a0cf02f8110c267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_property_bits</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_index, uint8_t property_byte)</argsstring>
        <name>lui_btngrid_set_btn_property_bits</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>property_byte</declname>
        </param>
        <briefdescription>
<para>Set property byte (8 bits) of a particular button in a buttongrid. </para>
        </briefdescription>
        <detaileddescription>
<para>Also see: <ref refid="group__lui__btngrid_1gaf32f56d6e1fd0e6a59dc558a841d62ab" kindref="member">lui_btngrid_set_propertymap()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button whose property is being set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>8-bit property value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1697" column="6" bodyfile="lame_ui.c" bodystart="1937" bodyend="1959" declfile="lame_ui.h" declline="1697" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga3e4a375a7f7b62b5fdcb4b290210536a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_text</definition>
        <argsstring>(lui_obj_t *obj, uint8_t btn_index, char *text)</argsstring>
        <name>lui_btngrid_set_btn_text</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>btn_index</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Set text of a particular button in a buttongrid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button whose text is being set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>text of the button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1706" column="6" bodyfile="lame_ui.c" bodystart="1961" bodyend="1984" declfile="lame_ui.h" declline="1706" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga1f41ec66946669fa36ed66a97ce7a5f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* lui_btngrid_get_btn_text</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_index)</argsstring>
        <name>lui_btngrid_get_btn_text</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_index</declname>
        </param>
        <briefdescription>
<para>Get text of a particular button in a buttongrid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* text of the button </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1715" column="12" bodyfile="lame_ui.c" bodystart="2048" bodyend="2074" declfile="lame_ui.h" declline="1715" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gace7e8cc9fdbcc01271c7e50351d1e081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_width_unit</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_index, uint8_t width_unit)</argsstring>
        <name>lui_btngrid_set_btn_width_unit</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width_unit</declname>
        </param>
        <briefdescription>
<para>Set the width unit of a particular button in a buttongrid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button whose width unit is being set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width_unit</parametername>
</parameternamelist>
<parameterdescription>
<para>width unit. Range is 1-15 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1724" column="6" bodyfile="lame_ui.c" bodystart="1986" bodyend="1995" declfile="lame_ui.h" declline="1724" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gac59ba58a24ab4be01e1dbef21bbbab05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_hidden</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_index, uint8_t hidden)</argsstring>
        <name>lui_btngrid_set_btn_hidden</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hidden</declname>
        </param>
        <briefdescription>
<para>Hide/unhide a particular button in the buttongrid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hidden</parametername>
</parameternamelist>
<parameterdescription>
<para>0: Visible, 1: Hidden </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1733" column="6" bodyfile="lame_ui.c" bodystart="1997" bodyend="2007" declfile="lame_ui.h" declline="1733" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gad433de542a9d897225abd72d22d7e2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_checkable</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_index, uint8_t checkable)</argsstring>
        <name>lui_btngrid_set_btn_checkable</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>checkable</declname>
        </param>
        <briefdescription>
<para>Set if a particular button is checkable or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkable</parametername>
</parameternamelist>
<parameterdescription>
<para>0: NOT checkable, 1: Checkable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1742" column="6" bodyfile="lame_ui.c" bodystart="2009" bodyend="2023" declfile="lame_ui.h" declline="1742" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga55e7742bb16fb8dedfdb0bd724164bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_checked</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_index, uint8_t checked)</argsstring>
        <name>lui_btngrid_set_btn_checked</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
<para>Set the check status of a particular button in button grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checked</parametername>
</parameternamelist>
<parameterdescription>
<para>0: NOT checked, 1: Checked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1751" column="6" bodyfile="lame_ui.c" bodystart="2025" bodyend="2035" declfile="lame_ui.h" declline="1751" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga04c8b09e20441143fc39405e2e42cc37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t lui_btngrid_get_acive_btn_index</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_btngrid_get_acive_btn_index</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get the index of currently active button, i.e., the button which has the input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int16_t Index of active button. -1 if error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1760" column="9" bodyfile="lame_ui.c" bodystart="2037" bodyend="2046" declfile="lame_ui.h" declline="1760" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gae1f8d50cc22f4c1523a82dd6f16e51b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t lui_btngrid_get_btn_check_status</definition>
        <argsstring>(lui_obj_t *obj, uint8_t btn_index)</argsstring>
        <name>lui_btngrid_get_btn_check_status</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>btn_index</declname>
        </param>
        <briefdescription>
<para>Get the check status of a particular button in button grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t Check status. 0: NOT checked, 1: Checked, -1: Error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1769" column="8" bodyfile="lame_ui.c" bodystart="2076" bodyend="2086" declfile="lame_ui.h" declline="1769" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga883d946697aaa0b49c7e30d223445af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_font</definition>
        <argsstring>(lui_obj_t *obj, const lui_font_t *font)</argsstring>
        <name>lui_btngrid_set_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set font of button grid text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1777" column="6" bodyfile="lame_ui.c" bodystart="2088" bodyend="2102" declfile="lame_ui.h" declline="1777" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1gaf362196a280469cb9a95bdae11650495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_extra_colors</definition>
        <argsstring>(lui_obj_t *obj, uint16_t btn_color, uint16_t label_color, uint16_t btn_pressed_color)</argsstring>
        <name>lui_btngrid_set_extra_colors</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>label_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>btn_pressed_color</declname>
        </param>
        <briefdescription>
<para>Set extra colors of button grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of button </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of button texts </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_pressed_color</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit color of pressed buttons </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1787" column="6" bodyfile="lame_ui.c" bodystart="2104" bodyend="2123" declfile="lame_ui.h" declline="1787" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga6b21900d39d7da89840cf43dae7d8d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_btngrid_set_btn_margin</definition>
        <argsstring>(lui_obj_t *obj, uint8_t margin_x, uint16_t margin_y)</argsstring>
        <name>lui_btngrid_set_btn_margin</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>margin_x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>margin_y</declname>
        </param>
        <briefdescription>
<para>Set margin of buttons in a button grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>margin_x</parametername>
</parameternamelist>
<parameterdescription>
<para>margin in X axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>margin_y</parametername>
</parameternamelist>
<parameterdescription>
<para>margin in Y axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1796" column="6" bodyfile="lame_ui.c" bodystart="2125" bodyend="2145" declfile="lame_ui.h" declline="1796" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__btngrid_1ga6bc7ed4b99549aca88111b9d11531058" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_btngrid_calc_btn_area</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>_lui_btngrid_calc_btn_area</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Calculate buttongrid area. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>buttongrid object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1804" column="6" bodyfile="lame_ui.c" bodystart="2147" bodyend="2200" declfile="lame_ui.h" declline="1804" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__keyboard_1gac8d85d9c6032bad7ec26ea9b6c7f8a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_keyboard_create</definition>
        <argsstring>()</argsstring>
        <name>lui_keyboard_create</name>
        <briefdescription>
<para>Create a keyboard object with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* Created keyboard (buttongrid) object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1850" column="11" bodyfile="lame_ui.c" bodystart="2245" bodyend="2274" declfile="lame_ui.h" declline="1850" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__keyboard_1gad92ac2dadb7ce0442f31bafc5c046eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* lui_keyboard_get_key_text</definition>
        <argsstring>(lui_obj_t *obj, uint8_t btn_index)</argsstring>
        <name>lui_keyboard_get_key_text</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>btn_index</declname>
        </param>
        <briefdescription>
<para>Get the text of a key against its index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard (buttongrid) object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>btn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the key/button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const char* text of the key </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1859" column="12" bodyfile="lame_ui.c" bodystart="2400" bodyend="2403" declfile="lame_ui.h" declline="1859" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__keyboard_1gafc32e9c221115c14e93d5cdaedce4c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_keyboard_set_mode</definition>
        <argsstring>(lui_obj_t *obj, uint8_t mode)</argsstring>
        <name>lui_keyboard_set_mode</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set the operation mode of keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para>For allowed modes, see: <ref refid="group__LUI__KEYBOARD__MODE" kindref="compound">Keyboard modes</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard (buttongrid) object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1869" column="6" bodyfile="lame_ui.c" bodystart="2359" bodyend="2393" declfile="lame_ui.h" declline="1869" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__keyboard_1ga05ffd2d8153473cb7114b0ce6e032a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_keyboard_set_font</definition>
        <argsstring>(lui_obj_t *obj, const lui_font_t *font)</argsstring>
        <name>lui_keyboard_set_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set font of the keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard (buttongrid) object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1877" column="6" bodyfile="lame_ui.c" bodystart="2395" bodyend="2398" declfile="lame_ui.h" declline="1877" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__keyboard_1ga8c3c17480bba2b6d06d8cc5bc25c02e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_keyboard_set_target_txtbox</definition>
        <argsstring>(lui_obj_t *obj_kb, lui_obj_t *obj_txtbox)</argsstring>
        <name>lui_keyboard_set_target_txtbox</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_kb</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_txtbox</declname>
        </param>
        <briefdescription>
<para>Set the target textbox of the keyboard. When target textbox is set, the keyboard becomes visible and only the target textbox receives input. To hide the keyboard again, tap/click on the &quot;check/ok&quot; button on the keyboard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_kb</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard (buttongrid) object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj_txtbox</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1887" column="6" bodyfile="lame_ui.c" bodystart="2405" bodyend="2447" declfile="lame_ui.h" declline="1887" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__keyboard_1ga4c2a164a62d97b0866c405ba36723971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_keyboard_sys_cb</definition>
        <argsstring>(lui_obj_t *obj_sender)</argsstring>
        <name>lui_keyboard_sys_cb</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_sender</declname>
        </param>
        <briefdescription>
<para>Keyboard callback function. This function handles all key presses. </para>
        </briefdescription>
        <detaileddescription>
<para>If user needs to write their own callback for keyboard, they must call this function from their own callback function.</para>
<para><bold>Example:</bold> <programlisting><codeline><highlight class="normal">//<sp/>User<sp/>defined<sp/>custom<sp/>callback<sp/>function<sp/>for<sp/>keyboard</highlight></codeline>
<codeline><highlight class="normal">void<sp/>kb_user_callback(lui_obj_t*<sp/>sender)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Keyboard<sp/>key<sp/>is<sp/>pressed.<sp/>Do<sp/>something</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>..........</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>[Mandatory]<sp/>After<sp/>all<sp/>user<sp/>stuffs<sp/>are<sp/>done,<sp/>must<sp/>call<sp/>lui_keyboard_sys_cb()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>lui_keyboard_sys_cb(sender);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">lui_obj_t*<sp/>keyboard<sp/>=<sp/>lui_keyboard_create();</highlight></codeline>
<codeline><highlight class="normal">lui_object_set_callback(keyboard,<sp/>kb_user_callback);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_sender</parametername>
</parameternamelist>
<parameterdescription>
<para>sender object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1912" column="6" bodyfile="lame_ui.c" bodystart="2276" bodyend="2357" declfile="lame_ui.h" declline="1912" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gaa71b139242431dd77aa330468c5aaf31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_textbox_create</definition>
        <argsstring>()</argsstring>
        <name>lui_textbox_create</name>
        <briefdescription>
<para>Create a textbox object with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* created textbox object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1983" column="11" bodyfile="lame_ui.c" bodystart="2564" bodyend="2600" declfile="lame_ui.h" declline="1983" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gaf80e132e37c89453b6115602714c0fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_draw</definition>
        <argsstring>()</argsstring>
        <name>lui_textbox_draw</name>
        <briefdescription>
<para>Draw a textbox. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1989" column="6" declfile="lame_ui.h" declline="1989" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gabe544e589562b44cec63dbfa41619c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_set_caret_index</definition>
        <argsstring>(lui_obj_t *obj, uint16_t caret_index)</argsstring>
        <name>lui_textbox_set_caret_index</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>caret_index</declname>
        </param>
        <briefdescription>
<para>Set the index (position) of caret (cursor) in the textbox. </para>
        </briefdescription>
        <detaileddescription>
<para>Text inputs are inserted at the position of caret.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>caret_index</parametername>
</parameternamelist>
<parameterdescription>
<para>caret index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="1999" column="6" bodyfile="lame_ui.c" bodystart="2602" bodyend="2620" declfile="lame_ui.h" declline="1999" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gae2377a9c0132bc6e909a0b23b1814fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lui_textbox_get_caret_index</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_textbox_get_caret_index</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get the caret index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t caret index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2007" column="10" bodyfile="lame_ui.c" bodystart="2622" bodyend="2631" declfile="lame_ui.h" declline="2007" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gaf12d728f7b2202c38b85d34d80669892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_insert_char</definition>
        <argsstring>(lui_obj_t *obj, char c)</argsstring>
        <name>lui_textbox_insert_char</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Insert a character at the position of caret. </para>
        </briefdescription>
        <detaileddescription>
<para>This does NOT change the caret index after the insert operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2017" column="6" bodyfile="lame_ui.c" bodystart="2633" bodyend="2654" declfile="lame_ui.h" declline="2017" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1ga6540b13528f24d0e29de00ce7e883835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_insert_string</definition>
        <argsstring>(lui_obj_t *obj, char *str, uint16_t len)</argsstring>
        <name>lui_textbox_insert_string</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Insert a string at the position of caret. </para>
        </briefdescription>
        <detaileddescription>
<para>This does NOT change the caret index after the insert operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string (character array) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the string NOT including the null character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2028" column="6" bodyfile="lame_ui.c" bodystart="2678" bodyend="2699" declfile="lame_ui.h" declline="2028" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gab96f6d6d3546ada97d759e88a8dede10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_delete_char</definition>
        <argsstring>(lui_obj_t *obj)</argsstring>
        <name>lui_textbox_delete_char</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Delete a character at the caret index. Does not work when caret is at 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2035" column="6" bodyfile="lame_ui.c" bodystart="2656" bodyend="2676" declfile="lame_ui.h" declline="2035" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1gabeb31790dc1b9e074de63bdf7f247776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_set_text_buffer</definition>
        <argsstring>(lui_obj_t *obj, char *text_buffer, uint16_t buff_size)</argsstring>
        <name>lui_textbox_set_text_buffer</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text_buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>buff_size</declname>
        </param>
        <briefdescription>
<para>Set the text buffer of a textbox. This is where the text is stored. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer (character array) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buff_size</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2044" column="6" bodyfile="lame_ui.c" bodystart="2701" bodyend="2717" declfile="lame_ui.h" declline="2044" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__textbox_1ga44c28a66f8a82241660c0c296df2c2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_textbox_set_font</definition>
        <argsstring>(lui_obj_t *obj, const lui_font_t *font)</argsstring>
        <name>lui_textbox_set_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set font of the textbox. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>textbox object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2052" column="6" bodyfile="lame_ui.c" bodystart="2733" bodyend="2747" declfile="lame_ui.h" declline="2052" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__panel_1ga2235782213592f3f575f076d5afad46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_panel_create</definition>
        <argsstring>()</argsstring>
        <name>lui_panel_create</name>
        <briefdescription>
<para>Create a panel object with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* Created panel object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2114" column="11" bodyfile="lame_ui.c" bodystart="2766" bodyend="2792" declfile="lame_ui.h" declline="2114" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__panel_1ga5e74112373754dd1f38965450efb6700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_panel_draw</definition>
        <argsstring>(lui_obj_t *obj_panel)</argsstring>
        <name>lui_panel_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_panel</declname>
        </param>
        <briefdescription>
<para>Draw apanel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_panel</parametername>
</parameternamelist>
<parameterdescription>
<para>panel object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2121" column="6" bodyfile="lame_ui.c" bodystart="2794" bodyend="2806" declfile="lame_ui.h" declline="2121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__scene_1ga4f6f694807ee038a13942060efb715f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_scene_create</definition>
        <argsstring>()</argsstring>
        <name>lui_scene_create</name>
        <briefdescription>
<para>Create a scene. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* cretaed scene </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2153" column="11" bodyfile="lame_ui.c" bodystart="2823" bodyend="2856" declfile="lame_ui.h" declline="2153" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__scene_1gab6b1e6f1f2b17745b02d6c3d3d6003d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_scene_draw</definition>
        <argsstring>(lui_obj_t *obj_scene)</argsstring>
        <name>lui_scene_draw</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_scene</declname>
        </param>
        <briefdescription>
<para>Draw scene. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_scene</parametername>
</parameternamelist>
<parameterdescription>
<para>scene widget </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2160" column="6" bodyfile="lame_ui.c" bodystart="2858" bodyend="2872" declfile="lame_ui.h" declline="2160" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__scene_1ga5a2c32f660fbbe39fae9d5f11055aff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_scene_set_active</definition>
        <argsstring>(lui_obj_t *obj_scene)</argsstring>
        <name>lui_scene_set_active</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_scene</declname>
        </param>
        <briefdescription>
<para>Set the active scene. Only active scene is rendered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_scene</parametername>
</parameternamelist>
<parameterdescription>
<para>scene widget </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2167" column="6" bodyfile="lame_ui.c" bodystart="2906" bodyend="2917" declfile="lame_ui.h" declline="2167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__scene_1ga84a7baf7297d1ed254e4feb3b8d125ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* lui_scene_get_active</definition>
        <argsstring>()</argsstring>
        <name>lui_scene_get_active</name>
        <briefdescription>
<para>Get the currently active scene. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_obj_t* active scene widget </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2174" column="11" bodyfile="lame_ui.c" bodystart="2919" bodyend="2922" declfile="lame_ui.h" declline="2174" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__scene_1ga9171479a041b608913d5601cc1f74c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_scene_set_font</definition>
        <argsstring>(lui_obj_t *obj_scene, const lui_font_t *font)</argsstring>
        <name>lui_scene_set_font</name>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_scene</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Set background bitmap image of a ascene. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_scene</parametername>
</parameternamelist>
<parameterdescription>
<para>scene widget </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>image</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Set font of a scene</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj_scene</parametername>
</parameternamelist>
<parameterdescription>
<para>scene widget </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>font </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2190" column="6" declfile="lame_ui.h" declline="2190" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__dispdrv_1ga1d63878ad3c05200478a7f7b958faa19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref> *</type>
        <definition>lui_dispdrv_t* lui_dispdrv_create</definition>
        <argsstring>()</argsstring>
        <name>lui_dispdrv_create</name>
        <briefdescription>
<para>Create display driver object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_dispdrv_t* created display driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2282" column="15" bodyfile="lame_ui.c" bodystart="3966" bodyend="3978" declfile="lame_ui.h" declline="2282" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__dispdrv_1ga77ef8325d1acf4c014be20de214e80de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_dispdrv_register</definition>
        <argsstring>(lui_dispdrv_t *dispdrv)</argsstring>
        <name>lui_dispdrv_register</name>
        <param>
          <type><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref> *</type>
          <declname>dispdrv</declname>
        </param>
        <briefdescription>
<para>Register display driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>display driver object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2289" column="6" bodyfile="lame_ui.c" bodystart="3980" bodyend="3985" declfile="lame_ui.h" declline="2289" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__dispdrv_1ga3516bb99ba95160e9673ba8541ffb13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_dispdrv_set_resolution</definition>
        <argsstring>(lui_dispdrv_t *dispdrv, uint16_t hor_res, uint16_t vert_res)</argsstring>
        <name>lui_dispdrv_set_resolution</name>
        <param>
          <type><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref> *</type>
          <declname>dispdrv</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>hor_res</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>vert_res</declname>
        </param>
        <briefdescription>
<para>Set horizontal and vertical resolution of display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>display driver object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hor_res</parametername>
</parameternamelist>
<parameterdescription>
<para>horizontal resolution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vert_res</parametername>
</parameternamelist>
<parameterdescription>
<para>vertical resolution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2298" column="6" bodyfile="lame_ui.c" bodystart="3987" bodyend="3993" declfile="lame_ui.h" declline="2298" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__dispdrv_1ga982617c7a5f3d018a3bab0e01eebf8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_dispdrv_set_draw_pixels_area_cb</definition>
        <argsstring>(lui_dispdrv_t *dispdrv, void(*draw_pixels_area_cb)(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color))</argsstring>
        <name>lui_dispdrv_set_draw_pixels_area_cb</name>
        <param>
          <type><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref> *</type>
          <declname>dispdrv</declname>
        </param>
        <param>
          <type>void(*)(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)</type>
          <declname>draw_pixels_area_cb</declname>
        </param>
        <briefdescription>
<para>Set callback function for drawing an area of pixels with a color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>display driver object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>draw_pixels_area_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2306" column="6" bodyfile="lame_ui.c" bodystart="3995" bodyend="4000" declfile="lame_ui.h" declline="2306" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__dispdrv_1gaa2cf5623fa26babf738af3a2ef0a5fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_dispdrv_set_render_complete_cb</definition>
        <argsstring>(lui_dispdrv_t *dispdrv, void(*render_complete_cb)())</argsstring>
        <name>lui_dispdrv_set_render_complete_cb</name>
        <param>
          <type><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref> *</type>
          <declname>dispdrv</declname>
        </param>
        <param>
          <type>void(*)()</type>
          <declname>render_complete_cb</declname>
        </param>
        <briefdescription>
<para>Set callback function for handling render complete signal. This is optional. </para>
        </briefdescription>
        <detaileddescription>
<para>When rendering is completed, LameUI calls this function. It is useful if user was buffering the draw calls rather than directly drawing the pixels on display. Inside the callback functio, user must flush the buffer to display. If user was NOT buffering, then no need to use this callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispdrv</parametername>
</parameternamelist>
<parameterdescription>
<para>display driver object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>render_complete_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2319" column="6" bodyfile="lame_ui.c" bodystart="4002" bodyend="4007" declfile="lame_ui.h" declline="2319" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__dispdrv_1ga7d451e8c6afd8351943302f22a22ab5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t _lui_disp_drv_check</definition>
        <argsstring>()</argsstring>
        <name>_lui_disp_drv_check</name>
        <briefdescription>
<para>Check if display driver and pixel drawing callback function are properly registered. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint8_t 0: Not registered, 1: Registered </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2327" column="9" bodyfile="lame_ui.c" bodystart="4513" bodyend="4523" declfile="lame_ui.h" declline="2327" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__input_1ga8a1f1c1a9f6d45e11ac7176cdf4873fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref> *</type>
        <definition>lui_touch_input_dev_t* lui_touch_inputdev_create</definition>
        <argsstring>()</argsstring>
        <name>lui_touch_inputdev_create</name>
        <briefdescription>
<para>Create touch input device object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>lui_touch_input_dev_t* Created touch input device object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2360" column="23" bodyfile="lame_ui.c" bodystart="4019" bodyend="4031" declfile="lame_ui.h" declline="2360" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__input_1ga3861ea1c2fa9e1776f1aff61dc52daa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_touch_inputdev_register</definition>
        <argsstring>(lui_touch_input_dev_t *touch_inputdev)</argsstring>
        <name>lui_touch_inputdev_register</name>
        <param>
          <type><ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref> *</type>
          <declname>touch_inputdev</declname>
        </param>
        <briefdescription>
<para>Register a touch input device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch_inputdev</parametername>
</parameternamelist>
<parameterdescription>
<para>touch input device object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2367" column="6" bodyfile="lame_ui.c" bodystart="4033" bodyend="4038" declfile="lame_ui.h" declline="2367" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__input_1ga72d86e81f1d818b174b5a97b1297d840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_touch_inputdev_set_read_input_cb</definition>
        <argsstring>(lui_touch_input_dev_t *touch_inputdev, void(*read_touch_input_cb)(lui_touch_input_data_t *touch_inputdata))</argsstring>
        <name>lui_touch_inputdev_set_read_input_cb</name>
        <param>
          <type><ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref> *</type>
          <declname>touch_inputdev</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" kindref="member">lui_touch_input_data_t</ref> *touch_inputdata)</type>
          <declname>read_touch_input_cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>touch_inputdev</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>read_touch_input_cb</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2375" column="6" declfile="lame_ui.h" declline="2375" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a878422617cd56a02b309f6f9deab11c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_mem_init</definition>
        <argsstring>(uint8_t mem_block[], uint16_t size)</argsstring>
        <name>_lui_mem_init</name>
        <param>
          <type>uint8_t</type>
          <declname>mem_block</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2381" column="6" bodyfile="lame_ui.c" bodystart="4525" bodyend="4530" declfile="lame_ui.h" declline="2381" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1ae03fc2afa6b8e441d7b0285c521c30b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* _lui_mem_alloc</definition>
        <argsstring>(uint16_t element_size)</argsstring>
        <name>_lui_mem_alloc</name>
        <param>
          <type>uint16_t</type>
          <declname>element_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2382" column="6" bodyfile="lame_ui.c" bodystart="4532" bodyend="4539" declfile="lame_ui.h" declline="2382" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a607e4827a3d385c3dc8a822d2754e9aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* _lui_process_input_of_act_scene</definition>
        <argsstring>()</argsstring>
        <name>_lui_process_input_of_act_scene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2383" column="11" bodyfile="lame_ui.c" bodystart="3546" bodyend="3630" declfile="lame_ui.h" declline="2383" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a4d4b856a3b08d8f9a07c40dab75ab3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* _lui_scan_all_obj_for_input</definition>
        <argsstring>(lui_touch_input_data_t *touch_input_data, lui_obj_t *obj_root, lui_obj_t *obj_excluded)</argsstring>
        <name>_lui_scan_all_obj_for_input</name>
        <param>
          <type><ref refid="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" kindref="member">lui_touch_input_data_t</ref> *</type>
          <declname>touch_input_data</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_root</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj_excluded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2384" column="11" bodyfile="lame_ui.c" bodystart="3632" bodyend="3703" declfile="lame_ui.h" declline="2384" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a53317dc46611fbae427ace1e0eb1dacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
        <definition>lui_obj_t* _lui_scan_individual_object_for_input</definition>
        <argsstring>(lui_touch_input_data_t *touch_input_data, lui_obj_t *obj)</argsstring>
        <name>_lui_scan_individual_object_for_input</name>
        <param>
          <type><ref refid="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" kindref="member">lui_touch_input_data_t</ref> *</type>
          <declname>touch_input_data</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2385" column="11" bodyfile="lame_ui.c" bodystart="3705" bodyend="3730" declfile="lame_ui.h" declline="2385" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1ae2e0d632702a66de5f5d068dada9f411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_set_obj_props_on_touch_input</definition>
        <argsstring>(lui_touch_input_data_t *input_data, lui_obj_t *obj)</argsstring>
        <name>_lui_set_obj_props_on_touch_input</name>
        <param>
          <type><ref refid="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" kindref="member">lui_touch_input_data_t</ref> *</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2386" column="6" bodyfile="lame_ui.c" bodystart="3790" bodyend="3953" declfile="lame_ui.h" declline="2386" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a36b54368346c49cc551083dce59bbaff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t _lui_check_if_active_obj_touch_input</definition>
        <argsstring>(lui_touch_input_data_t *input_data, lui_obj_t *obj)</argsstring>
        <name>_lui_check_if_active_obj_touch_input</name>
        <param>
          <type><ref refid="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" kindref="member">lui_touch_input_data_t</ref> *</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type><ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2387" column="9" bodyfile="lame_ui.c" bodystart="3732" bodyend="3788" declfile="lame_ui.h" declline="2387" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a32881af029062a76504f7d80766feb1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t _lui_get_event_against_state</definition>
        <argsstring>(uint8_t new_state, uint8_t old_state)</argsstring>
        <name>_lui_get_event_against_state</name>
        <param>
          <type>uint8_t</type>
          <declname>new_state</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>old_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2389" column="9" bodyfile="lame_ui.c" bodystart="4408" bodyend="4498" declfile="lame_ui.h" declline="2389" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1gaf84e3918864703ba0639c43978b6ea97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_draw_string_advanced</definition>
        <argsstring>(const char *str, uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t fore_color, uint16_t bg_color, uint8_t is_bg, const lui_font_t *font)</argsstring>
        <name>lui_gfx_draw_string_advanced</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fore_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bg_color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_bg</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2400" column="6" bodyfile="lame_ui.c" bodystart="4056" bodyend="4114" declfile="lame_ui.h" declline="2400" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1ga34170dff54b3f4cd9fb0b5c5fd883e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_draw_string_simple</definition>
        <argsstring>(const char *str, uint16_t x, uint16_t y, uint16_t fore_color, const lui_font_t *font)</argsstring>
        <name>lui_gfx_draw_string_simple</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fore_color</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2401" column="6" bodyfile="lame_ui.c" bodystart="4116" bodyend="4119" declfile="lame_ui.h" declline="2401" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1ga4cb1f631c60220fe1388d8bcafab4b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_draw_char</definition>
        <argsstring>(char c, uint16_t x, uint16_t y, uint16_t fore_color, uint16_t bg_color, uint8_t is_bg, const lui_font_t *font)</argsstring>
        <name>lui_gfx_draw_char</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fore_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bg_color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_bg</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2402" column="6" bodyfile="lame_ui.c" bodystart="4121" bodyend="4127" declfile="lame_ui.h" declline="2402" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1gabf4a47ee478dcf930887d2b1f919133a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_get_string_dimension</definition>
        <argsstring>(const char *str, const lui_font_t *font_obj, uint16_t max_w, uint16_t *str_dim)</argsstring>
        <name>lui_gfx_get_string_dimension</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font_obj</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max_w</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>str_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2403" column="6" bodyfile="lame_ui.c" bodystart="4196" bodyend="4240" declfile="lame_ui.h" declline="2403" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1gad4c604716d2df4943ac32b35fa56ac14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_draw_line</definition>
        <argsstring>(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t line_width, uint16_t color)</argsstring>
        <name>lui_gfx_draw_line</name>
        <param>
          <type>uint16_t</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2404" column="6" bodyfile="lame_ui.c" bodystart="4134" bodyend="4168" declfile="lame_ui.h" declline="2404" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1gad91328f058c99813e23a79a0e5aed425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_draw_rect</definition>
        <argsstring>(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t line_width, uint16_t color)</argsstring>
        <name>lui_gfx_draw_rect</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2405" column="6" bodyfile="lame_ui.c" bodystart="4173" bodyend="4181" declfile="lame_ui.h" declline="2405" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1ga85fb0f8d768116008acf2f12ee3af158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lui_gfx_draw_rect_fill</definition>
        <argsstring>(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint16_t color)</argsstring>
        <name>lui_gfx_draw_rect_fill</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2406" column="6" bodyfile="lame_ui.c" bodystart="4186" bodyend="4189" declfile="lame_ui.h" declline="2406" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lui__gfx_1ga4340cdddeeb18dbcd7c0a0eb9dbcb9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t lui_rgb</definition>
        <argsstring>(uint16_t red, uint16_t green, uint16_t blue)</argsstring>
        <name>lui_rgb</name>
        <param>
          <type>uint16_t</type>
          <declname>red</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>green</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2407" column="10" bodyfile="lame_ui.c" bodystart="4243" bodyend="4246" declfile="lame_ui.h" declline="2407" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1aa2e958469e118904a54004c834779a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct__lui__glyph__t" kindref="compound">_lui_glyph_t</ref> *</type>
        <definition>const _lui_glyph_t* _lui_gfx_get_glyph_from_char</definition>
        <argsstring>(char c, const lui_font_t *font)</argsstring>
        <name>_lui_gfx_get_glyph_from_char</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2409" column="20" bodyfile="lame_ui.c" bodystart="4248" bodyend="4263" declfile="lame_ui.h" declline="2409" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a7f55400d276a2100f8ce722ce5dffb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_gfx_render_char_glyph</definition>
        <argsstring>(uint16_t x, uint16_t y, uint16_t fore_color, uint16_t bg_color, uint8_t is_bg, const _lui_glyph_t *glyph, const lui_font_t *font)</argsstring>
        <name>_lui_gfx_render_char_glyph</name>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fore_color</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bg_color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_bg</declname>
        </param>
        <param>
          <type>const <ref refid="struct__lui__glyph__t" kindref="compound">_lui_glyph_t</ref> *</type>
          <declname>glyph</declname>
        </param>
        <param>
          <type>const <ref refid="structlui__font__t" kindref="compound">lui_font_t</ref> *</type>
          <declname>font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2410" column="6" bodyfile="lame_ui.c" bodystart="4272" bodyend="4321" declfile="lame_ui.h" declline="2410" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a3bb54afdae476b08538714744a806db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_gfx_plot_line_low</definition>
        <argsstring>(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t line_width, uint16_t color)</argsstring>
        <name>_lui_gfx_plot_line_low</name>
        <param>
          <type>uint16_t</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2411" column="6" bodyfile="lame_ui.c" bodystart="4327" bodyend="4354" declfile="lame_ui.h" declline="2411" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a1ad3e2d43fd774f4f857e8f7d4f23be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _lui_gfx_plot_line_high</definition>
        <argsstring>(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint8_t line_width, uint16_t color)</argsstring>
        <name>_lui_gfx_plot_line_high</name>
        <param>
          <type>uint16_t</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2412" column="6" bodyfile="lame_ui.c" bodystart="4360" bodyend="4387" declfile="lame_ui.h" declline="2412" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="lame__ui_8h_1a65143b83ab55cdcc5ac9b853677b881e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double _lui_map_range</definition>
        <argsstring>(double old_val, double old_max, double old_min, double new_max, double new_min)</argsstring>
        <name>_lui_map_range</name>
        <param>
          <type>double</type>
          <declname>old_val</declname>
        </param>
        <param>
          <type>double</type>
          <declname>old_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>old_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>new_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>new_min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lame_ui.h" line="2413" column="8" bodyfile="lame_ui.c" bodystart="4503" bodyend="4507" declfile="lame_ui.h" declline="2413" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>One and only header file for LameUI library. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Avra Mitra </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2022-05-28</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>02-Apr-2020</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>INC_LAME_UI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INC_LAME_UI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>User<sp/>Config</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__LUI__USER__CONFIG_1gac614eedf6ba02a547abc55527a7f2982" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_MAX_OBJECTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>130<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_USE_DARK_THEME<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__LUI__USE__OBJECT_1ga82c1ecd24694c1c50e9f804b510a5f68" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_LINECHART<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="group__LUI__USE__OBJECT_1ga090cd6d9140af68e21d5d1d466011b51" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_SWITCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="group__LUI__USE__OBJECT_1ga06d5e9b628c01b45bc47c6af3f735ba5" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_CHECKBOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="group__LUI__USE__OBJECT_1ga037a75e722772914ddedf12f38f1c431" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_SLIDER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="group__LUI__USE__OBJECT_1gab31bbf353b4a1abe8a3a8374e47098c7" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_LIST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="group__LUI__USE__OBJECT_1gae65a21daf3dd06d5a8cb7e1d89d01e3f" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_PANEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="group__LUI__USE__OBJECT_1ga4b024b1b29ba110778de47b1d0e3f480" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_TEXTBOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="group__LUI__USE__OBJECT_1ga4cbf5b51287f460c68b268c5bd598871" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_USE_BUTTONGRID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor">#if<sp/>defined(LUI_USE_BUTTONGRID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__LUI__USE__OBJECT_1gab8fdedff83ca539ac192a8943d38177e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_USE_KEYBOARD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End<sp/>Config</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------</highlight></codeline>
<codeline lineno="72"><highlight class="comment">/*<sp/>-------<sp/>!!!<sp/>Don&apos;t<sp/>edit<sp/>anything<sp/>below<sp/>!!!<sp/>-------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Macro<sp/>Definitions</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_INPUT_TYPE_TOUCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>LUI_INPUT_TYPE_ENCODER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__LUI__STATE_1gafa8144d7cc23391d25d08cfd6c24563f" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_STATE_IDLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92" refid="group__LUI__STATE_1ga30afefa8e1c9dcbc7bff36f77448dd00" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_STATE_SELECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="group__LUI__STATE_1ga4e9f31b3efcee1dd2b30b6c5e1c6bf2b" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_STATE_PRESSED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="group__LUI__STATE_1gae7fad37f0ae5cb98ac8b76fd848ca985" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_STATE_ENTERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="104" refid="group__LUI__EVENT_1ga1848d9f83eeb058010e309e253410dce" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="group__LUI__EVENT_1gac7d6c6bf48a50747e102d7de5729931d" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_SELECTED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="group__LUI__EVENT_1gae233d0007818b1c119d1c8cd44e04f63" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_SELECTION_LOST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107" refid="group__LUI__EVENT_1gac1d4660029fe5efac27e0116e258d65d" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_PRESSED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="group__LUI__EVENT_1ga7bb839ee9510a334e4ebc1af25613d25" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_RELEASED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="group__LUI__EVENT_1gac3c329747d83a31d3e2bdaa4f59c7106" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_ENTERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="group__LUI__EVENT_1gadc65dc42494a76b2ec7da54ee0571c3f" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_EXITED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111" refid="group__LUI__EVENT_1gaac0f29869773a73ada40aa4b8bba419e" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_VALUE_CHANGED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="group__LUI__EVENT_1ga992d862ff4bb6f046eaba1f9b026bb61" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_EVENT_CHECK_CHANGED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="120" refid="group__LUI__OBJ_1ga0f0485902b6bef68f14ff1be14981601" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="group__LUI__OBJ_1gabf090b42db96c0047ecc237c29b40b2a" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_LABEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="group__LUI__OBJ_1ga71ca4e187e8cdb3523ecaa04cc8e839a" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_BUTTON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="group__LUI__OBJ_1ga8e7d5766387add17777da01798587b00" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_SWITCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="group__LUI__OBJ_1ga9c3c2877dc4affdd235ad8fe08bc2dda" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_LINECHART<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="group__LUI__OBJ_1ga98cfeaf48cb8a5e56abb21711ce897f1" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_PANEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="group__LUI__OBJ_1ga913f973f4218c30495747ec49ffc62b8" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_SCENE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="group__LUI__OBJ_1ga8639b63999e5213c9577763000ff46a6" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_GENERIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="group__LUI__OBJ_1ga1d04fb7b87c8368cf88bb79fdec83385" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_LIST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="group__LUI__OBJ_1ga33316a24dae697bdf359501cf0a8adeb" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_CHECKBOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="group__LUI__OBJ_1gaba6bbd7622f9a952033593c2ca45a379" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_SLIDER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10<sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="group__LUI__OBJ_1ga4d227ff4ed4479e309b6b9ad3fad7334" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_BTNGRID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11<sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="group__LUI__OBJ_1gada57323fd9df5ab45a4a66db12d55766" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_OBJ_TEXTBOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12<sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor">#define<sp/>LUI_LAYER_POPUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="group__LUI__KEYBOARD__MODE_1ga53cf1a061af12c998702ac1dc8c6ffca" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_KEYBOARD_MODE_TXT_LOWER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143" refid="group__LUI__KEYBOARD__MODE_1ga6c7dfef998e05b11ae2bcfdb5af32f27" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_KEYBOARD_MODE_TXT_UPPER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="group__LUI__KEYBOARD__MODE_1gaf40e758476c4dacde5c9c79dd265e7eb" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_KEYBOARD_MODE_TXT_SPCL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor">#define<sp/>LUI_ICON_HOME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x01&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_RELAOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x02&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_BATTERY_HALF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x03&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_LOCATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x04&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_BATTERY_FULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x05&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_CHECKMARK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x06&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_RETURN_DOWN_BACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x07&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_ARROW_DOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x08&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_BACKSPACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x09&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_PAUSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x0A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_REMOVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x0B&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_POWER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x0C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_HOURGLASS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x0D&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_VOLUME_MEDIUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x0E&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_ARROW_BACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x0F&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_CLOSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x10&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_BLUETOOTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x11&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_PLAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x12&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_VOLUME_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x13&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_ARROW_FORWARD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x14&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_BATTERY_CHARGING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x15&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_ARROW_UP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_WIFI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x17&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_SEARCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x18&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_WARNING<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x19&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_SETTINGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x1A&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_ADD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x1B&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_BATTERY_DEAED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x1C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_ICON_STOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\x1D&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__LUI__BTNGRID__MASKS_1ga265e4dc05e3da27de273897cd2e982ea" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_BTNGRID_MASK_BTN_DISABLED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199" refid="group__LUI__BTNGRID__MASKS_1gaa89b220d3a160df88c7a9c9b5a45d673" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_BTNGRID_MASK_BTN_HIDDEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200" refid="group__LUI__BTNGRID__MASKS_1ga4602d581d707dea1c8b3da39a573e3ee" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_BTNGRID_MASK_BTN_CHECKABLE<sp/><sp/><sp/><sp/><sp/><sp/>0x10<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="group__LUI__BTNGRID__MASKS_1ga2112955982994d548d7789d152d2552d" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_BTNGRID_MASK_BTN_CHECKED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="group__LUI__BTNGRID__MASKS_1gac8eb53fd6ef2b0911ca5b25c6b65bd30" refkind="member"><highlight class="preprocessor">#define<sp/>LUI_BTNGRID_MASK_BTN_WIDTH_UNIT<sp/><sp/><sp/><sp/><sp/>0x0F<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"></highlight><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Macro<sp/>Definitions<sp/>End</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Typedefs<sp/>and<sp/>Structs</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="struct__lui__mem__block__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>mem_block;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>block_max_sz;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>mem_allocated;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<ref refid="struct__lui__mem__block__t" kindref="compound">_lui_mem_block_t</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>generic<sp/>bitmap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="structlui__bitmap__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>size_x;<sp/></highlight><highlight class="comment">//size<sp/>is<sp/>in<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>size_y;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>payload;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}<sp/><ref refid="structlui__bitmap__t" kindref="compound">lui_bitmap_t</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>font<sp/>glyph<sp/>description<sp/>-<sp/>for<sp/>now<sp/>it<sp/>does<sp/>not<sp/>support<sp/>kerning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="struct__lui__glyph__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character;<sp/></highlight><highlight class="comment">//ASCII<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>width;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>payload_index;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}<sp/><ref refid="struct__lui__glyph__t" kindref="compound">_lui_glyph_t</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="241" refid="structlui__font__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__bitmap__t" kindref="compound">lui_bitmap_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bitmap;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>glyph_count;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lui__glyph__t" kindref="compound">_lui_glyph_t</ref><sp/>*glyphs;<sp/></highlight><highlight class="comment">//pointer<sp/>to<sp/>array<sp/>of<sp/>glypt_t<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">}<sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>;<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref><sp/>FONT_lui_default;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="struct__lui__area__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__area__s" kindref="compound">_lui_area_s</ref></highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>x1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>y1;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>x2;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>y2;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}<ref refid="struct__lui__area__s" kindref="compound">lui_area_t</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="struct__lui__common__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__common__style__s" kindref="compound">_lui_common_style_s</ref></highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>bg_color;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>border_color;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>width;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>height;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>border_visible;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="struct__lui__label__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__label__style__s" kindref="compound">_lui_label_style_s</ref></highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>text_color;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273" refid="struct__lui__button__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__button__style__s" kindref="compound">_lui_button_style_s</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>label_color;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>pressed_color;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>selection_color;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_SWITCH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="struct__lui__switch__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__switch__style__s" kindref="compound">_lui_switch_style_s</ref></highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>knob_on_color;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>knob_off_color;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>selection_color;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_CHECKBOX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="struct__lui__checkbox__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__checkbox__style__s" kindref="compound">_lui_checkbox_style_s</ref></highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>tick_color;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>bg_checked_color;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>selection_color;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_SLIDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="struct__lui__slider__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__slider__style__s" kindref="compound">_lui_slider_style_s</ref></highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>knob_color;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>bg_filled_color;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>selection_color;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>knob_width;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_LINECHART)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="struct__lui__linechart__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__linechart__style__s" kindref="compound">_lui_linechart_style_s</ref></highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>line_color;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>grid_color;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>grid_visible;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_LIST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="struct__lui__list__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__list__style__s" kindref="compound">_lui_list_style_s</ref></highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__button__style__s" kindref="compound">_lui_button_style_s</ref><sp/>item_btn;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__common__style__s" kindref="compound">_lui_common_style_s</ref><sp/>item_btn_common;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_BUTTONGRID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="struct__lui__btngrid__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__btngrid__style__s" kindref="compound">_lui_btngrid_style_s</ref></highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>btn_margin_hor;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>btn_margin_vert;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_label_color;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_pressed_color;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>btn_bg_color;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_TEXTBOX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="struct__lui__textbox__style__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__textbox__style__s" kindref="compound">_lui_textbox_style_s</ref></highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>text_color;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="struct__lui__obj__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">_lui_obj_s</ref></highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352" refid="struct__lui__obj__s_1ad7a868063071869e6cc22a4d101b6027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct__lui__obj__s_1ad7a868063071869e6cc22a4d101b6027" kindref="member">x</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353" refid="struct__lui__obj__s_1a4689dc7b32cb884320a97586bf196756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct__lui__obj__s_1a4689dc7b32cb884320a97586bf196756" kindref="member">y</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354" refid="struct__lui__obj__s_1a9dfaeda34c9badfe4eb4d8ab932b6e7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1a9dfaeda34c9badfe4eb4d8ab932b6e7d" kindref="member">layer</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="355" refid="struct__lui__obj__s_1ad3fbc73ce05f3af7629d93e0570a76ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__common__style__s" kindref="compound">_lui_common_style_s</ref><sp/><ref refid="struct__lui__obj__s_1ad3fbc73ce05f3af7629d93e0570a76ee" kindref="member">common_style</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356" refid="struct__lui__obj__s_1a7ad39f75f19d3cb6a7654d8a567da9d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1a7ad39f75f19d3cb6a7654d8a567da9d5" kindref="member">state</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="357" refid="struct__lui__obj__s_1a6649137425629eda7875c3585ed82e4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1a6649137425629eda7875c3585ed82e4b" kindref="member">event</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="358" refid="struct__lui__obj__s_1aaac41856f181c09296e9bd8520dcef87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct__lui__obj__s_1aaac41856f181c09296e9bd8520dcef87" kindref="member">value</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="359" refid="struct__lui__obj__s_1ab35767e8fc0a0194b7ef0a0d9b013c5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct__lui__obj__s_1ab35767e8fc0a0194b7ef0a0d9b013c5b" kindref="member">obj_event_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">_lui_obj_s</ref>*<sp/>obj);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361" refid="struct__lui__obj__s_1a275f11482198c4928ff046afc2d12d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1a275f11482198c4928ff046afc2d12d75" kindref="member">needs_refresh</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="362" refid="struct__lui__obj__s_1ae1f763ddc000c579b9b320d1fdb45ceb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1ae1f763ddc000c579b9b320d1fdb45ceb" kindref="member">visible</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363" refid="struct__lui__obj__s_1aac174797628f2d476bf12a3dd6891acb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1aac174797628f2d476bf12a3dd6891acb" kindref="member">enabled</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364" refid="struct__lui__obj__s_1a09286cf82c6438f979d6cffe1950d857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1a09286cf82c6438f979d6cffe1950d857" kindref="member">obj_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365" refid="struct__lui__obj__s_1aea0b9cd28f1ba903d648623c857d2e95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">_lui_obj_s</ref>*<sp/><ref refid="struct__lui__obj__s_1aea0b9cd28f1ba903d648623c857d2e95" kindref="member">parent</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="366" refid="struct__lui__obj__s_1a631dc168ea34ee24e0a7ad5bdcc234b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__obj__s_1a631dc168ea34ee24e0a7ad5bdcc234b0" kindref="member">children_count</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367" refid="struct__lui__obj__s_1a5c23ab35ec3102b85427725c724e3389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">_lui_obj_s</ref>*<sp/><ref refid="struct__lui__obj__s_1a5c23ab35ec3102b85427725c724e3389" kindref="member">first_child</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368" refid="struct__lui__obj__s_1a7296c2b24aebeac0fe07f3aad9f3ba84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">_lui_obj_s</ref>*<sp/><ref refid="struct__lui__obj__s_1a7296c2b24aebeac0fe07f3aad9f3ba84" kindref="member">next_sibling</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370" refid="struct__lui__obj__s_1a119055db688819a2caf7b79c62d8a75c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct__lui__obj__s_1a119055db688819a2caf7b79c62d8a75c" kindref="member">obj_main_data</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}<ref refid="lame__ui_8h_1a5a7ccb45f639e22e43b3ac176a75dd09" kindref="member">lui_obj_t</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_LINECHART)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="struct__lui__linechart__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__linechart__s" kindref="compound">_lui_linechart_s</ref></highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hor_count;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>vert_count;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint16_t<sp/>color;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>is_grid;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}grid;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__linechart__style__s" kindref="compound">_lui_linechart_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>source;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>points;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>auto_scale;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_max_value;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_min_value;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}data;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint16_t<sp/>color;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}<ref refid="struct__lui__linechart__s" kindref="compound">lui_chart_t</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="struct__lui__label__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__label__s" kindref="compound">_lui_label_s</ref></highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint16_t<sp/>color;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__label__style__s" kindref="compound">_lui_label_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}<ref refid="struct__lui__label__s" kindref="compound">lui_label_t</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="struct__lui__button__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__button__s" kindref="compound">_lui_button_s</ref></highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}label;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__button__style__s" kindref="compound">_lui_button_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}<ref refid="struct__lui__button__s" kindref="compound">lui_button_t</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_SWITCH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="struct__lui__switch__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__switch__s" kindref="compound">_lui_switch_s</ref></highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__switch__style__s" kindref="compound">_lui_switch_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}<ref refid="struct__lui__switch__s" kindref="compound">lui_switch_t</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_CHECKBOX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="struct__lui__checkbox__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__checkbox__s" kindref="compound">_lui_checkbox_s</ref></highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__checkbox__style__s" kindref="compound">_lui_checkbox_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}<ref refid="struct__lui__checkbox__s" kindref="compound">lui_checkbox_t</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_SLIDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="struct__lui__slider__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__slider__s" kindref="compound">_lui_slider_s</ref></highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>range_min;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>range_max;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>knob&apos;s<sp/>center&apos;s<sp/>x<sp/>position<sp/>relative<sp/>to<sp/>slider&apos;s<sp/>start<sp/>x<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>knob_center_rel_x;<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__slider__style__s" kindref="compound">_lui_slider_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}<ref refid="struct__lui__slider__s" kindref="compound">lui_slider_t</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_LIST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="struct__lui__list__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__list__s" kindref="compound">_lui_list_s</ref></highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>page_count;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_page_index;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>selected_button_index;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>using<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buttons_per_page;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>button_item_min_height;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//struct<sp/>_lui_list_style_s<sp/>style;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">}<ref refid="struct__lui__list__s" kindref="compound">lui_list_t</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_KEYBOARD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="struct__lui__keyboard__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__keyboard__s" kindref="compound">_lui_keyboard_s</ref></highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>target_txtbox;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>keyboard_mode;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">}<ref refid="struct__lui__keyboard__s" kindref="compound">lui_keyboard_t</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_BUTTONGRID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="struct__lui__btngrid__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__btngrid__s" kindref="compound">_lui_btngrid_s</ref></highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>texts;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>btn_properties;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lui__area__s" kindref="compound">lui_area_t</ref>*<sp/>btn_area;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>btn_cnt;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>row_cnt;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>active_btn_index;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>needs_full_render;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__btngrid__style__s" kindref="compound">_lui_btngrid_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(LUI_USE_KEYBOARD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__keyboard__s" kindref="compound">_lui_keyboard_s</ref>*<sp/>kb_data;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}<ref refid="struct__lui__btngrid__s" kindref="compound">lui_btngrid_t</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_TEXTBOX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="struct__lui__textbox__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__textbox__s" kindref="compound">_lui_textbox_s</ref></highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_buffer;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>max_len;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>caret_index;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>used_chars;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>needs_full_render;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__textbox__style__s" kindref="compound">_lui_textbox_style_s</ref><sp/>style;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}<ref refid="struct__lui__textbox__s" kindref="compound">lui_textbox_t</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_PANEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="struct__lui__panel__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__panel__s" kindref="compound">_lui_panel_s</ref></highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlui__bitmap__t" kindref="compound">lui_bitmap_t</ref>*<sp/>bg_image;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}<ref refid="struct__lui__panel__s" kindref="compound">lui_panel_t</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="struct__lui__scene__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__scene__s" kindref="compound">_lui_scene_s</ref></highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlui__bitmap__t" kindref="compound">lui_bitmap_t</ref>*<sp/>bg_image;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">}<ref refid="struct__lui__scene__s" kindref="compound">lui_scene_t</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="struct__lui__touch__input__data__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__touch__input__data__s" kindref="compound">_lui_touch_input_data_s</ref></highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522" refid="struct__lui__touch__input__data__s_1afb1054eabf8033209df3b6bc2ca5a2af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct__lui__touch__input__data__s_1afb1054eabf8033209df3b6bc2ca5a2af" kindref="member">is_pressed</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523" refid="struct__lui__touch__input__data__s_1a7f21ada3a9a2b790c51c2f767ea3e30e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="struct__lui__touch__input__data__s_1a7f21ada3a9a2b790c51c2f767ea3e30e" kindref="member">x</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524" refid="struct__lui__touch__input__data__s_1a0dda12587fe70222aa328760a1ab2055" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="struct__lui__touch__input__data__s_1a0dda12587fe70222aa328760a1ab2055" kindref="member">y</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal">}<ref refid="lame__ui_8h_1aa6d259bd0bdabcea1b151e6ae903b135" kindref="member">lui_touch_input_data_t</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="struct__lui__disp__drv__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__disp__drv__s" kindref="compound">_lui_disp_drv_s</ref></highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*draw_pixels_area_cb)(uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*render_complete_cb)();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>display_hor_res;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>display_vert_res;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}<ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="struct__lui__touch__input__dev__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__touch__input__dev__s" kindref="compound">_lui_touch_input_dev_s</ref></highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*read_touch_input_cb)(<ref refid="struct__lui__touch__input__data__s" kindref="compound">lui_touch_input_data_t</ref>*<sp/>input);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lui_touch_input_data_t<sp/>touch_data;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">}<ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="struct__lui__main__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__lui__main__s" kindref="compound">_lui_main_s</ref></highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//lui_obj_t*<sp/>scenes[LUI_MAX_SCENES];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>default_font;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>active_scene;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>active_obj;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>*<sp/>disp_drv;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref>*<sp/>touch_input_dev;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lui_touch_input_data_t<sp/>last_touch_data;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>input_state_pressed;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>input_event_clicked;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>total_scenes;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>total_created_objects;<sp/><sp/></highlight><highlight class="comment">//increases<sp/>as<sp/>new<sp/>objs<sp/>are<sp/>created.<sp/>It<sp/>never<sp/>decreases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">}<ref refid="struct__lui__main__s" kindref="compound">_lui_main_t</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Typedefs/Structs<sp/>Ends</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*--------------------------------------------</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init<sp/>and<sp/>Update<sp/>functions</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__core_1ga96ff45bfbaf38c57a613f1b4a4830893" kindref="member">lui_init</ref>(uint8_t<sp/>mem_block[],<sp/>uint16_t<sp/>size);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__core_1gaa4a3c7694929ad0b6c5cd565dd6e7304" kindref="member">lui_update</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_OBJECT<sp/>(generic)<sp/>related<sp/>functions</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga0d71d83d0757cfbafd9308689e41aaf2" kindref="member">lui_object_add_to_parent</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>parent_obj);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga0410a5dd9b906d11881611fc0dfdeea6" kindref="member">lui_object_remove_from_parent</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1gaed4bb7d9c2764c6786708535fad7cf67" kindref="member">lui_object_set_area</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>width,<sp/>uint16_t<sp/>height);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga7a2a43446875ea180d2a5f1103f0a547" kindref="member">lui_object_set_width</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>width);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga0e9b5ea44b5698a9fac1d1a8440e378b" kindref="member">lui_object_set_height</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>height);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1gaf7bedc873edb862f9c1f8b063f17f839" kindref="member">lui_object_set_position</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>x,<sp/>uint16_t<sp/>y);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1gac6ab60ef6a5e52ec9dd37dcb9cf117c0" kindref="member">lui_object_set_x_pos</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>x);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga7cf13aeef87bd34c6e25e1bf410fe0bb" kindref="member">lui_object_set_y_pos</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>y);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga40a7f5963092cc887757eb4c72342caa" kindref="member">lui_object_set_border_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>border_color);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1gaa3e5b7c777ceee12a215eaa6bc45554b" kindref="member">lui_object_set_border_visibility</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>is_visible);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga3c99e7b2155290f9b73b78ba87c3d34d" kindref="member">lui_object_set_bg_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1gae9d2e2e1998f2603a3a6d24d08b5b64e" kindref="member">lui_object_set_callback</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*obj_event_cb)(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal">int8_t<sp/><ref refid="group__lui__object_1gac20b18b75c1e5764e5cb00dc3bed6808" kindref="member">lui_object_get_state</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">int8_t<sp/><ref refid="group__lui__object_1ga580b2bdece45808266791573d874aabb" kindref="member">lui_object_get_event</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga15a349bf7d1abcbc475f009f7dd14dff" kindref="member">lui_object_set_visibility</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>visible);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1gae97c5a363860c5fa7de4d40f167592a4" kindref="member">lui_object_set_layer</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>layer_index);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal">int16_t<sp/><ref refid="group__lui__object_1ga14ac387f2a2e89bdda2773f21e79d087" kindref="member">lui_object_get_layer</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">uint8_t<sp/><ref refid="group__lui__object_1ga36344388e628fde997ebafaf75a43ee4" kindref="member">lui_object_set_enable_input</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/><sp/>uint8_t<sp/>is_enabled);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>functions<sp/>(User<sp/>must<sp/>not<sp/>call<sp/>them)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__object_1ga035918521a6c575108b64d7e960bb645" kindref="member">_lui_object_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga4c6477031513cc6b7b71aaf99e1ee06c" kindref="member">_lui_object_set_need_refresh</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga4dacce477148500e23838ed091d2ca24" kindref="member">_lui_object_render_parent_with_children</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__object_1ga3de65dadcfd95ac4fef0845da6e5392d" kindref="member">_lui_object_render</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_lui_obj_layer_cmprtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p2);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>functions<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_LABEL<sp/>related<sp/>functions</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__label_1ga83cc1ae5b6c0601af8614574e019e8f8" kindref="member">lui_label_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__label_1ga176b351997c1058f4d6fc9bc86942429" kindref="member">lui_label_draw</ref><sp/>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_lbl);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__label_1ga1ae5970ffa3b6be91e483a8618db71c9" kindref="member">lui_label_set_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_lbl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__label_1ga45528354a67fe65f23435338f970ba33" kindref="member">lui_label_set_text</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_lbl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__label_1gafba0abb6ce13e87b7efa3e0390269094" kindref="member">lui_label_set_text_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_lbl,<sp/>uint16_t<sp/>text_color);</highlight></codeline>
<codeline lineno="907"><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_LINECHART<sp/>related<sp/>functions</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_LINECHART)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__linechart_1ga5facac71c6d8909ae573b7c518ebb386" kindref="member">lui_linechart_create</ref>();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1ga3169eb03a77d57752ba70b71c28592fc" kindref="member">lui_linechart_draw</ref><sp/>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1ga79ea0c8ddadc0fe5c2fc0ff5ebe4b88f" kindref="member">lui_linechart_set_grid_count</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/>uint16_t<sp/>hor_lines,<sp/>uint16_t<sp/>vert_lines);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1gaf75ead7c255c81d4436fba1d4e3091f3" kindref="member">lui_linechart_set_grid_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1ga44e534594549d38910a2f617d81ad408" kindref="member">lui_linechart_set_grid_visible</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/>uint8_t<sp/>state);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1ga462e794b64cfa672d7207490412785cd" kindref="member">lui_linechart_set_line_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/>uint16_t<sp/>line_color);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1ga043fb5fc50cb96fb3ea3bb14110328bf" kindref="member">lui_linechart_set_data_auto_scale</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/>uint8_t<sp/>auto_scale);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1ga906c519f1c9ba0cac3e0e47b70887ac0" kindref="member">lui_linechart_set_data_range</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_max);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__linechart_1gada31833542d8eb263b960fc3575b42f7" kindref="member">lui_linechart_set_data_source</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_linechart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>source,<sp/>uint16_t<sp/>points);</highlight></codeline>
<codeline lineno="1008"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__button_1gae3764b62e449b19e779892553ef6ed67" kindref="member">lui_button_create</ref>();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__button_1gad887047af16cb14b720cf1cf8116c1af" kindref="member">lui_button_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_btn);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__button_1gaec9c0f394998052cbc800530f69f3a97" kindref="member">lui_button_set_label_text</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_btn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__button_1ga7136a562c97ee76a05e8b9bff807ca3f" kindref="member">lui_button_set_label_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_btn,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__button_1ga6418e81c76d0182534e1decc65f417b8" kindref="member">lui_button_set_label_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_btn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__button_1gaf719ba472084dcdb38418184b63bd323" kindref="member">lui_button_set_extra_colors</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_btn,<sp/>uint16_t<sp/>pressed_color,<sp/>uint16_t<sp/>selection_color);</highlight></codeline>
<codeline lineno="1096"><highlight class="preprocessor">#if<sp/>defined(LUI_USE_SWITCH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__switch_1ga331cedddf1136c8e3b2fa0a3d1c8f9b9" kindref="member">lui_switch_create</ref>();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__switch_1gafd67bf0ba01cf6c48b3f6e779a9ff95a" kindref="member">lui_switch_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_swtch);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__switch_1gad099ebc520d4213febf9e5e8710aaf12" kindref="member">lui_switch_set_extra_colors</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_swtch,<sp/>uint16_t<sp/>knob_off_color,<sp/>uint16_t<sp/>knob_on_color,<sp/>uint16_t<sp/>selection_color);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal">int8_t<sp/><ref refid="group__lui__switch_1ga0793cf720943fa01792f6bb86cb5b00c" kindref="member">lui_switch_get_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_swtch);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__switch_1gacd9eafcf927ab9af5e842f5dc31fd558" kindref="member">lui_switch_set_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_swtch,<sp/>uint8_t<sp/>value);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__switch_1ga4453c8ab068c81d45c1029a280c45e8c" kindref="member">lui_switch_set_on</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_swtch);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__switch_1gaeef193f35434dde5845a0132ce7f4c05" kindref="member">lui_switch_set_off</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_swtch);</highlight></codeline>
<codeline lineno="1181"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_CHECKBOX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__checkbox_1ga9742a1e9706106024911e0004d5bf2ac" kindref="member">lui_checkbox_create</ref>();</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__checkbox_1ga36738f45907e976f8bf92595352ea968" kindref="member">lui_checkbox_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_checkbox);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__checkbox_1gae501d0976d301bc3c03e11b28eee654a" kindref="member">lui_checkbox_set_extra_colors</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_checkbox,<sp/>uint16_t<sp/>bg_checked_color,<sp/>uint16_t<sp/>tick_color,<sp/>uint16_t<sp/>selection_color);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal">int8_t<sp/><ref refid="group__lui__checkbox_1ga8a995bd50bfb68ec15ad27af875b7048" kindref="member">lui_checkbox_get_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_checkbox);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__checkbox_1ga44562059aeab006ce233adbe64f3ddca" kindref="member">lui_checkbox_set_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_checkbox,<sp/>uint8_t<sp/>value);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__checkbox_1gaa7343339b91349d29de783a1a5f10338" kindref="member">lui_checkbox_set_checked</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_checkbox);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__checkbox_1gad54464b47322e3c6b4918a0c43bb5a66" kindref="member">lui_checkbox_set_unchecked</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_checkbox);</highlight></codeline>
<codeline lineno="1263"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_SLIDER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__slider_1ga358faa44037147a07840905d98def2ab" kindref="member">lui_slider_create</ref>();</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__slider_1ga89456da8b3d00d85366cd97a68ea6ef2" kindref="member">lui_slider_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__slider_1ga695e69ff0ae901a26aeebbfa467e6ffd" kindref="member">lui_slider_set_extra_colors</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider,<sp/>uint16_t<sp/>knob_color,<sp/>uint16_t<sp/>bg_filled_color,<sp/>uint16_t<sp/>selection_color);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__slider_1ga7b4465c8e22c0b89b2fecfbc67c07cc0" kindref="member">lui_slider_set_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider,<sp/>int16_t<sp/>value);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__slider_1ga4134aedb43ab207c9db42606a7bb2bd1" kindref="member">lui_slider_set_range</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider,<sp/>int16_t<sp/>range_min,<sp/>int16_t<sp/>range_max);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal">int16_t<sp/><ref refid="group__lui__slider_1gaf2d084b05fbbcce0d315fc70420709ab" kindref="member">lui_slider_get_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal">int16_t<sp/><ref refid="group__lui__slider_1ga6d2b4a71de9a68d2575d1572f71fbcb3" kindref="member">lui_slider_get_min_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal">int16_t<sp/><ref refid="group__lui__slider_1ga9a0709df634fac8694c67c91fe18d64c" kindref="member">lui_slider_get_max_value</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_slider);</highlight></codeline>
<codeline lineno="1361"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_LIST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__list_1gad7eda3882ef90983dd2fac598e6699a3" kindref="member">lui_list_create</ref>();</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga04c3b17479a68f18ad15e9209e79b225" kindref="member">lui_list_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__list_1ga44ee84ed9cee3f474917ce51766582c6" kindref="member">lui_list_add_item</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1gabfcf03c5664bd32033468f249cee095f" kindref="member">lui_list_delete_item</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_item_addr);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga50b081682a8bc9ab50e229d432605b2e" kindref="member">lui_list_prepare</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga7b3ca3fb28dbf45735f386c47fe442eb" kindref="member">lui_list_set_item_min_height</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/>uint8_t<sp/>height);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga78b10f123fed4442a355aded019192ef" kindref="member">lui_list_set_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga7f3880daf82482a5607cab5e0cb29312" kindref="member">lui_list_set_nav_btn_label_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga333597198d7084bb6043f2d1138edc70" kindref="member">lui_list_set_nav_btn_bg_color</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga68f52172597db059c42dc40341e8837d" kindref="member">lui_list_set_nav_btn_extra_colors</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/>uint16_t<sp/>pressed_color,<sp/>uint16_t<sp/>selection_color);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga0d18fe32b64aeaace3f49809cf375a9b" kindref="member">lui_list_set_page_index</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>index);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga28e33de3b1ab46c24e75089b6730fa93" kindref="member">_lui_list_add_nav_buttons</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga998a8db32df4974f8a0114cfbaa5f9e1" kindref="member">_lui_list_nav_btn_cb</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__list_1ga113b2b881f1deeebf321838a26af1eda" kindref="member">_lui_list_add_button_obj</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_list,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_btn);</highlight></codeline>
<codeline lineno="1512"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_BUTTONGRID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__btngrid_1ga60ea2e3e4af851bce7b4280a869438ba" kindref="member">lui_btngrid_create</ref>();</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1gaa9a9febb315d359420be30fea2d9657d" kindref="member">lui_btngrid_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga03a8859464594c353885a559c5026328" kindref="member">lui_btngrid_set_textmap</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>texts[]);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1gaf32f56d6e1fd0e6a59dc558a841d62ab" kindref="member">lui_btngrid_set_propertymap</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>properties[]);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga0fba296e6cbf020c2a0cf02f8110c267" kindref="member">lui_btngrid_set_btn_property_bits</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_index,<sp/>uint8_t<sp/>property_byte);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga3e4a375a7f7b62b5fdcb4b290210536a" kindref="member">lui_btngrid_set_btn_text</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>btn_index,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__lui__btngrid_1ga1f41ec66946669fa36ed66a97ce7a5f3" kindref="member">lui_btngrid_get_btn_text</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_index);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1gace7e8cc9fdbcc01271c7e50351d1e081" kindref="member">lui_btngrid_set_btn_width_unit</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_index,<sp/>uint8_t<sp/>width_unit);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1gac59ba58a24ab4be01e1dbef21bbbab05" kindref="member">lui_btngrid_set_btn_hidden</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_index,<sp/>uint8_t<sp/>hidden);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1gad433de542a9d897225abd72d22d7e2a4" kindref="member">lui_btngrid_set_btn_checkable</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_index,<sp/>uint8_t<sp/>checkable);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga55e7742bb16fb8dedfdb0bd724164bfb" kindref="member">lui_btngrid_set_btn_checked</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_index,<sp/>uint8_t<sp/>checked);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal">int16_t<sp/><ref refid="group__lui__btngrid_1ga04c8b09e20441143fc39405e2e42cc37" kindref="member">lui_btngrid_get_acive_btn_index</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal">int8_t<sp/><ref refid="group__lui__btngrid_1gae1f8d50cc22f4c1523a82dd6f16e51b1" kindref="member">lui_btngrid_get_btn_check_status</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>btn_index);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga883d946697aaa0b49c7e30d223445af1" kindref="member">lui_btngrid_set_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1gaf362196a280469cb9a95bdae11650495" kindref="member">lui_btngrid_set_extra_colors</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>btn_color,<sp/>uint16_t<sp/>label_color,<sp/>uint16_t<sp/>btn_pressed_color);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga6b21900d39d7da89840cf43dae7d8d39" kindref="member">lui_btngrid_set_btn_margin</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>margin_x,<sp/>uint16_t<sp/>margin_y);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__btngrid_1ga6bc7ed4b99549aca88111b9d11531058" kindref="member">_lui_btngrid_calc_btn_area</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="1806"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_KEYBOARD)<sp/>&amp;&amp;<sp/>defined(LUI_USE_BUTTONGRID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__keyboard_1gac8d85d9c6032bad7ec26ea9b6c7f8a23" kindref="member">lui_keyboard_create</ref>();</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__lui__keyboard_1gad92ac2dadb7ce0442f31bafc5c046eb2" kindref="member">lui_keyboard_get_key_text</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>btn_index);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__keyboard_1gafc32e9c221115c14e93d5cdaedce4c65" kindref="member">lui_keyboard_set_mode</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint8_t<sp/>mode);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__keyboard_1ga05ffd2d8153473cb7114b0ce6e032a6b" kindref="member">lui_keyboard_set_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__keyboard_1ga8c3c17480bba2b6d06d8cc5bc25c02e3" kindref="member">lui_keyboard_set_target_txtbox</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_kb,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_txtbox);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__keyboard_1ga4c2a164a62d97b0866c405ba36723971" kindref="member">lui_keyboard_sys_cb</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_sender);</highlight></codeline>
<codeline lineno="1914"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_TEXTBOX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__textbox_1gaa71b139242431dd77aa330468c5aaf31" kindref="member">lui_textbox_create</ref>();</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1gaf80e132e37c89453b6115602714c0fce" kindref="member">lui_textbox_draw</ref>();</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1gabe544e589562b44cec63dbfa41619c5d" kindref="member">lui_textbox_set_caret_index</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/>uint16_t<sp/>caret_index);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal">uint16_t<sp/><ref refid="group__lui__textbox_1gae2377a9c0132bc6e909a0b23b1814fc7" kindref="member">lui_textbox_get_caret_index</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1gaf12d728f7b2202c38b85d34d80669892" kindref="member">lui_textbox_insert_char</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1ga6540b13528f24d0e29de00ce7e883835" kindref="member">lui_textbox_insert_string</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>uint16_t<sp/>len);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1gab96f6d6d3546ada97d759e88a8dede10" kindref="member">lui_textbox_delete_char</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1gabeb31790dc1b9e074de63bdf7f247776" kindref="member">lui_textbox_set_text_buffer</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_buffer,<sp/>uint16_t<sp/>buff_size);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__textbox_1ga44c28a66f8a82241660c0c296df2c2dd" kindref="member">lui_textbox_set_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2054"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(LUI_USE_PANEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__panel_1ga2235782213592f3f575f076d5afad46a" kindref="member">lui_panel_create</ref>();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__panel_1ga5e74112373754dd1f38965450efb6700" kindref="member">lui_panel_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_panel);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/>Set<sp/>background<sp/>image<sp/>of<sp/>the<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>obj_panel<sp/>panel<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>image<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>lui_panel_set_bg_image(lui_obj_t*<sp/>obj_panel,<sp/>const<sp/>lui_bitmap_t*<sp/>image);</highlight></codeline>
<codeline lineno="2131"><highlight class="comment"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__scene_1ga4f6f694807ee038a13942060efb715f0" kindref="member">lui_scene_create</ref>();</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__scene_1gab6b1e6f1f2b17745b02d6c3d3d6003d1" kindref="member">lui_scene_draw</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_scene);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__scene_1ga5a2c32f660fbbe39fae9d5f11055aff7" kindref="member">lui_scene_set_active</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_scene);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/><ref refid="group__lui__scene_1ga84a7baf7297d1ed254e4feb3b8d125ea" kindref="member">lui_scene_get_active</ref>();</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/>Set<sp/>background<sp/>bitmap<sp/>image<sp/>of<sp/>a<sp/>ascene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>obj_scene<sp/>scene<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>image<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>lui_scene_set_bg_image(lui_obj_t*<sp/>obj_scene,<sp/>const<sp/>lui_bitmap_t*<sp/>image);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__scene_1ga9171479a041b608913d5601cc1f74c43" kindref="member">lui_scene_set_font</ref>(<ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_scene,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>*<sp/><ref refid="group__lui__dispdrv_1ga1d63878ad3c05200478a7f7b958faa19" kindref="member">lui_dispdrv_create</ref>();</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__dispdrv_1ga77ef8325d1acf4c014be20de214e80de" kindref="member">lui_dispdrv_register</ref>(<ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>*<sp/>dispdrv);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__dispdrv_1ga3516bb99ba95160e9673ba8541ffb13e" kindref="member">lui_dispdrv_set_resolution</ref>(<ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>*<sp/>dispdrv,<sp/>uint16_t<sp/>hor_res,<sp/>uint16_t<sp/>vert_res);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__dispdrv_1ga982617c7a5f3d018a3bab0e01eebf8e3" kindref="member">lui_dispdrv_set_draw_pixels_area_cb</ref>(<ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>*<sp/>dispdrv,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*draw_pixels_area_cb)(uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint16_t<sp/>color));</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__dispdrv_1gaa2cf5623fa26babf738af3a2ef0a5fc4" kindref="member">lui_dispdrv_set_render_complete_cb</ref>(<ref refid="struct__lui__disp__drv__s" kindref="compound">lui_dispdrv_t</ref>*<sp/>dispdrv,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*render_complete_cb)());</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal">uint8_t<sp/><ref refid="group__lui__dispdrv_1ga7d451e8c6afd8351943302f22a22ab5e" kindref="member">_lui_disp_drv_check</ref>();</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref>*<sp/><ref refid="group__lui__input_1ga8a1f1c1a9f6d45e11ac7176cdf4873fd" kindref="member">lui_touch_inputdev_create</ref>();</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__input_1ga3861ea1c2fa9e1776f1aff61dc52daa9" kindref="member">lui_touch_inputdev_register</ref><sp/>(<ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref>*<sp/>touch_inputdev);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lui__input_1ga72d86e81f1d818b174b5a97b1297d840" kindref="member">lui_touch_inputdev_set_read_input_cb</ref>(<ref refid="struct__lui__touch__input__dev__s" kindref="compound">lui_touch_input_dev_t</ref>*<sp/>touch_inputdev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*read_touch_input_cb)(<ref refid="struct__lui__touch__input__data__s" kindref="compound">lui_touch_input_data_t</ref>*<sp/>touch_inputdata));</highlight></codeline>
<codeline lineno="2378"><highlight class="comment">//-------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------<sp/>HELPER<sp/>FUNCTIONS<sp/>-----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="comment">//-------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lui_mem_init(uint8_t<sp/>mem_block[],<sp/>uint16_t<sp/>size);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>_lui_mem_alloc(uint16_t<sp/>element_size);</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>_lui_process_input_of_act_scene();</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>_lui_scan_all_obj_for_input(<ref refid="struct__lui__touch__input__data__s" kindref="compound">lui_touch_input_data_t</ref>*<sp/>touch_input_data,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_root,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj_excluded);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>_lui_scan_individual_object_for_input(<ref refid="struct__lui__touch__input__data__s" kindref="compound">lui_touch_input_data_t</ref>*<sp/>touch_input_data,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lui_set_obj_props_on_touch_input(<ref refid="struct__lui__touch__input__data__s" kindref="compound">lui_touch_input_data_t</ref>*<sp/>input_data,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal">uint8_t<sp/>_lui_check_if_active_obj_touch_input(<ref refid="struct__lui__touch__input__data__s" kindref="compound">lui_touch_input_data_t</ref>*<sp/>input_data,<sp/><ref refid="struct__lui__obj__s" kindref="compound">lui_obj_t</ref>*<sp/>obj);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>lui_font_t*<sp/>_lui_get_font_from_active_scene();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal">uint8_t<sp/>_lui_get_event_against_state(uint8_t<sp/>new_state,<sp/>uint8_t<sp/>old_state);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_draw_string_advanced(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint16_t<sp/>fore_color,<sp/>uint16_t<sp/>bg_color,<sp/>uint8_t<sp/>is_bg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_draw_string_simple(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>fore_color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_draw_char(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/>uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>fore_color,<sp/>uint16_t<sp/>bg_color,<sp/>uint8_t<sp/>is_bg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_get_string_dimension(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font_obj,<sp/>uint16_t<sp/>max_w,<sp/>uint16_t*<sp/>str_dim);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_draw_line(uint16_t<sp/>x0,<sp/>uint16_t<sp/>y0,<sp/>uint16_t<sp/>x1,<sp/>uint16_t<sp/>y1,<sp/>uint8_t<sp/>line_width,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_draw_rect(uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint8_t<sp/>line_width,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lui_gfx_draw_rect_fill(uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>w,<sp/>uint16_t<sp/>h,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal">uint16_t<sp/>lui_rgb(uint16_t<sp/>red,<sp/>uint16_t<sp/>green,<sp/>uint16_t<sp/>blue);</highlight></codeline>
<codeline lineno="2409"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lui__glyph__t" kindref="compound">_lui_glyph_t</ref>*<sp/>_lui_gfx_get_glyph_from_char(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lui_gfx_render_char_glyph(uint16_t<sp/>x,<sp/>uint16_t<sp/>y,<sp/>uint16_t<sp/>fore_color,<sp/>uint16_t<sp/>bg_color,<sp/>uint8_t<sp/>is_bg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__lui__glyph__t" kindref="compound">_lui_glyph_t</ref>*<sp/>glyph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlui__font__t" kindref="compound">lui_font_t</ref>*<sp/>font);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lui_gfx_plot_line_low(uint16_t<sp/>x0,<sp/>uint16_t<sp/>y0,<sp/>uint16_t<sp/>x1,<sp/>uint16_t<sp/>y1,<sp/>uint8_t<sp/>line_width,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_lui_gfx_plot_line_high(uint16_t<sp/>x0,<sp/>uint16_t<sp/>y0,<sp/>uint16_t<sp/>x1,<sp/>uint16_t<sp/>y1,<sp/>uint8_t<sp/>line_width,<sp/>uint16_t<sp/>color);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_lui_map_range(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>old_val,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>old_max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>old_min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_min);</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LUI_R_POS_RGB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11<sp/><sp/>//<sp/>Red<sp/>last<sp/>bit<sp/>position<sp/>for<sp/>RGB<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LUI_G_POS_RGB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/>//<sp/>Green<sp/>last<sp/>bit<sp/>position<sp/>for<sp/>RGB<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LUI_B_POS_RGB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>//<sp/>Blue<sp/>last<sp/>bit<sp/>position<sp/>for<sp/>RGB<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_RGB(R,G,B)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint16_t)(R<sp/>&gt;&gt;<sp/>3)<sp/>&lt;&lt;<sp/>_LUI_R_POS_RGB)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="2425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)(G<sp/>&gt;&gt;<sp/>2)<sp/>&lt;&lt;<sp/>_LUI_G_POS_RGB)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="2426"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint16_t)(B<sp/>&gt;&gt;<sp/>3)<sp/>&lt;&lt;<sp/>_LUI_B_POS_RGB))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2430"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dark<sp/>and<sp/>Light<sp/>Theme.<sp/>User<sp/>may<sp/>modify<sp/>here<sp/>if<sp/>needed</highlight></codeline>
<codeline lineno="2431"><highlight class="comment"><sp/>*------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2432"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Comment<sp/>out<sp/>OR<sp/>set<sp/>value<sp/>to<sp/>0<sp/>for<sp/>enabling<sp/>light<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434" refid="group__LUI__USER__CONFIG_1gab6571f6979947007287617835dafc85c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_USE_DARK_THEME<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_PRESSED_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(91,<sp/>160,<sp/>235)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_SELECTION_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(75,<sp/>81,<sp/>92)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_PRESSED_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(91,<sp/>160,<sp/>235)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_SELECTION_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BUTTON_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(75,<sp/>81,<sp/>92)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_BUTTON_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_BUTTON_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_BUTTON_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_TEXT_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(23,<sp/>33,<sp/>43)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_TEXT_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_TEXT_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LABEL_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LABEL_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LABEL_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*40*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LABEL_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*30*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_SELECTION_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>170,<sp/>179)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_KNOB_OFF_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(57,<sp/>62,<sp/>70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_KNOB_ON_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(23,<sp/>33,<sp/>43)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_SELECTION_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>170,<sp/>179)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_KNOB_OFF_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(150,<sp/>150,<sp/>150)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_KNOB_ON_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SWITCH_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SWITCH_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SWITCH_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SWITCH_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_SELECTION_COLOR<sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_TICK_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(23,<sp/>33,<sp/>43)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_BG_CHECKED_COLOR<sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_SELECTION_COLOR<sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_TICK_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_BG_CHECKED_COLOR<sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_CHECKBOX_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_CHECKBOX_BORDER_VISIBLE<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_CHECKBOX_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_CHECKBOX_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_STYLE_CHECKBOX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_SELECTION_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>170,<sp/>179)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_KNOB_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(57,<sp/>62,<sp/>70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_BG_FILLED_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(45,<sp/>77,<sp/>112)<sp/></highlight><highlight class="comment">/*54,<sp/>94,<sp/>138*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_SELECTION_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>170,<sp/>179)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_KNOB_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_BG_FILLED_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(45,<sp/>77,<sp/>112)<sp/></highlight><highlight class="comment">/*54,<sp/>94,<sp/>138*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SLIDER_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SLIDER_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SLIDER_KNOB_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SLIDER_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_SLIDER_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_LINE_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_GRID_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(75,<sp/>81,<sp/>92)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(35,<sp/>46,<sp/>60)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_BORDER_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_LINE_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_GRID_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(150,<sp/>150,<sp/>150)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LINECHART_BORDER_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LINECHART_GRID_VISIBLE<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LINECHART_BORDER_VISIBLE<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LINECHART_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LINECHART_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_PRESSED_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(91,<sp/>160,<sp/>235)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_SELECTION_COLOR<sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(57,<sp/>62,<sp/>70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_SELECTION_COLOR<sp/>LUI_RGB(84,<sp/>91,<sp/>102)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_PRESSED_COLOR<sp/><sp/><sp/>LUI_RGB(109,<sp/>118,<sp/>133)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_BORDER_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(75,<sp/>81,<sp/>92)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_PRESSED_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(91,<sp/>160,<sp/>235)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_NAV_SELECTION_COLOR<sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_SELECTION_COLOR<sp/>LUI_RGB(84,<sp/>91,<sp/>102)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_PRESSED_COLOR<sp/><sp/><sp/>LUI_RGB(109,<sp/>118,<sp/>133)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_ITEM_BORDER_COLOR<sp/><sp/><sp/><sp/>LUI_RGB(75,<sp/>81,<sp/>92)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_LIST_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LIST_ITEM_BORDER_VISIBLE<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LIST_ITEM_MIN_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LIST_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LIST_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_LIST_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BASE_BG_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(23,<sp/>33,<sp/>43)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_PRESSED_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(91,<sp/>160,<sp/>235)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(39,<sp/>55,<sp/>71)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_SELECTION_COLOR<sp/><sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(75,<sp/>81,<sp/>92)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BORDER_VISIBLE<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BASE_BG_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_LABEL_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_PRESSED_COLOR<sp/><sp/><sp/><sp/><sp/>LUI_RGB(91,<sp/>160,<sp/>235)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(200,<sp/>200,<sp/>200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_SELECTION_COLOR<sp/><sp/><sp/>LUI_RGB(82,<sp/>143,<sp/>209)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(150,<sp/>150,<sp/>150)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_BTNGRID_BORDER_VISIBLE<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_BTNGRID_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>300</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_BTNGRID_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_TEXTBOX_TEXT_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(238,<sp/>238,<sp/>238)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_TEXTBOX_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(45,<sp/>56,<sp/>70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_TEXTBOX_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_TEXTBOX_TEXT_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(0,<sp/>0,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_TEXTBOX_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_TEXTBOX_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_TEXTBOX_BORDER_VISIBLE<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_TEXTBOX_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_TEXTBOX_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_PANEL_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(23,<sp/>33,<sp/>43)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_PANEL_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_PANEL_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_PANEL_BORDER_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(74,<sp/>129,<sp/>188)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_PANEL_BORDER_VISIBLE<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_PANEL_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LUI_STYLE_PANEL_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LUI_USE_DARK_THEME<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SCENE_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(23,<sp/>33,<sp/>43)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LUI_STYLE_SCENE_BG_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LUI_RGB(255,<sp/>255,<sp/>255)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2617"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>End<sp/>Theme</highlight></codeline>
<codeline lineno="2618"><highlight class="comment"><sp/>*------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2619"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void*<sp/>)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INC_LAME_UI_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lame_ui.h"/>
  </compounddef>
</doxygen>
